{"version":3,"sources":["common/map-utils.js","common/map-classes.js","common/map-hooks.js","common/utils.js","components/TripInfoModal.js","components/DeviceStatusTable.js","App.js","index.js"],"names":["getNewLayerRemoveOldLayer","mapRef","primitive","newLayerId","current","getLayer","oldLayerId","removeLayer","removeSource","mouseEnterCallback","e","popupRef","getCanvas","style","cursor","coordinates","features","geometry","slice","description","properties","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","mouseLeaveCallback","remove","plotLine","line","getStatusTable","options","shed_animation","addLayer","id","type","source","data","layout","paint","fitBounds","point","mapboxgl","LngLat","initBounds","LngLatBounds","reduce","bounds","lat","extend","computeBounds","linear","padding","top","bottom","left","right","map","alt","recorded_at","ReactDOMServer","renderToString","icon","classes","Point","on","event","plotMarkers","deviceStatusMarkers","start","end","deviceStatus","activity","duration","location","utils","getIcon","Line","this","useMap","container","React","useRef","useEffect","Map","accessToken","keyboard","center","valid_device_status_states","forEach","status_type","loadImage","getImageSource","error","image","console","addImage","usePopup","Popup","closeButton","closeOnClick","trip_schema","require","LineString_schema","ajv","allErrors","trip_validator","compile","LineString_validator","getStartEndData","acc","timestamp","markerTypeMap","geofence","marker","arrival","arrivalPoint","geofencePoint","arrivalTime","geofenceId","geofence_id","geofenceMetadata","JSON","stringify","metadata","radius","Number","device_status","value","extra","parseMarker","validatorMap","trip","LineString","includes","secondsToHms","d","h","floor","m","s","markersByType","markers","allMarkers","currentMarker","validateInputJSON","json","validate","errors","variant","process","TripInfoModal","showTripModal","updateJson","hideModal","showModal","fetchError","useState","userJson","updateUserJson","undefined","filename","updateFilename","updateErrors","validateInput","tripJSON","validationErrors","length","Boolean","intent","Intent","SUCCESS","className","onClick","isOpen","title","onClose","Classes","DIALOG_BODY","disabled","onChange","target","placeholder","onBlur","preventDefault","parse","Array","isArray","bordered","key","dataPath","message","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","text","buttonText","onInputChange","fileReader","FileReader","file","files","name","readAsText","onload","onloadEvent","derivedFileValue","result","inputProps","accept","PRIMARY","updatedJson","months","formatDate","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","rowMap","deviceStatusMarker","Date","locationMarker","headerMap","DeviceStatusTable","props","colSpan","mapContainerId","params","URLSearchParams","window","search","gistURL","get","locationArrays","App","updateShowTripModal","updateError","hooks","handleJsonUpdate","fromLocalstorage","localStorage","setItem","mapUtils","summary","locations","gistId","split","pop","fetch","then","response","content","Object","values","catch","previousJSON","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75022470.chunk.js","sourcesContent":["import mapboxgl from \"mapbox-gl\";\n\nimport { utils, classes } from \"./\";\n\nimport ReactDOMServer from \"react-dom/server\";\n\nconst computeBounds = coordinates => {\n  const point = new mapboxgl.LngLat(coordinates[0][0], coordinates[0][1]);\n  const initBounds = new mapboxgl.LngLatBounds(point, point);\n  return coordinates.reduce(\n    (bounds, [lng, lat]) => bounds.extend(new mapboxgl.LngLat(lng, lat)),\n    initBounds\n  );\n};\n\nconst getNewLayerRemoveOldLayer = (mapRef, primitive) => {\n  let newLayerId = primitive;\n  if (\n    mapRef.current.getLayer(primitive) ||\n    mapRef.current.getLayer(`${primitive}1`)\n  ) {\n    newLayerId = mapRef.current.getLayer(primitive)\n      ? `${primitive}1`\n      : primitive;\n    const oldLayerId = mapRef.current.getLayer(primitive)\n      ? primitive\n      : `${primitive}1`;\n    mapRef.current.removeLayer(oldLayerId);\n    mapRef.current.removeSource(oldLayerId);\n  }\n  return newLayerId;\n};\n\nconst mouseEnterCallback = (e, mapRef, popupRef) => {\n  mapRef.current.getCanvas().style.cursor = \"pointer\";\n  let coordinates = e.features[0].geometry.coordinates.slice();\n  const description = e.features[0].properties.description;\n  while (Math.abs(e.lngLat.lng - coordinates[0]) > 180)\n    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n  popupRef.current\n    .setLngLat(coordinates)\n    .setHTML(description)\n    .addTo(mapRef.current);\n};\n\nconst mouseLeaveCallback = (mapRef, popupRef) => {\n  mapRef.current.getCanvas().style.cursor = \"\";\n  popupRef.current.remove();\n};\n\nconst plotLine = (mapRef, popupRef, line, getStatusTable, options) => {\n  const { shed_animation } = options;\n  let newLayerId = getNewLayerRemoveOldLayer(mapRef, \"route\");\n  mapRef.current\n    .addLayer({\n      id: newLayerId,\n      type: \"line\",\n      source: {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: line\n        }\n      },\n      layout: {\n        \"line-join\": \"round\",\n        \"line-cap\": \"round\"\n      },\n      paint: {\n        \"line-color\": \"#6f4cff\",\n        \"line-width\": 8\n      }\n    })\n    .fitBounds(computeBounds(line.coordinates), {\n      linear: shed_animation,\n      padding: { top: 40, bottom: 40, left: 20, right: 20 }\n    });\n\n  newLayerId = getNewLayerRemoveOldLayer(mapRef, \"locationMarkers\");\n  mapRef.current.addLayer({\n    id: newLayerId,\n    type: \"symbol\",\n    source: {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: line.coordinates.map(([lng, lat, alt, recorded_at]) => ({\n          type: \"Feature\",\n          properties: {\n            description: ReactDOMServer.renderToString(\n              getStatusTable({\n                type: \"locationMarker\",\n                coordinates: [lat, lng],\n                alt,\n                recorded_at\n              })\n            ),\n            icon: \"marker\"\n          },\n          geometry: new classes.Point({\n            type: \"Point\",\n            coordinates: [lng, lat]\n          })\n        }))\n      }\n    },\n    layout: {\n      \"icon-image\": \"{icon}-15\",\n      \"icon-allow-overlap\": false\n    }\n  });\n\n  mapRef.current.on(\"mouseenter\", newLayerId, event =>\n    mouseEnterCallback(event, mapRef, popupRef)\n  );\n\n  mapRef.current.on(\"mouseleave\", newLayerId, () =>\n    mouseLeaveCallback(mapRef, popupRef)\n  );\n};\n\nconst plotMarkers = (mapRef, popupRef, deviceStatusMarkers, getStatusTable) => {\n  const newLayerId = getNewLayerRemoveOldLayer(mapRef, \"deviceStatusMarkers\");\n  mapRef.current.addLayer({\n    id: newLayerId,\n    type: \"symbol\",\n    source: {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: deviceStatusMarkers.reduce(\n          (features, { start, end, deviceStatus, activity, duration }) =>\n            start.location && end.location\n              ? [\n                  ...features,\n                  {\n                    type: \"Feature\",\n                    properties: {\n                      description: ReactDOMServer.renderToString(\n                        getStatusTable({\n                          type: \"deviceStatusMarker\",\n                          start,\n                          end,\n                          deviceStatus\n                        })\n                      ),\n                      icon: utils.getIcon(deviceStatus, activity)\n                    },\n                    geometry: start.location\n                  },\n                  {\n                    type: \"Feature\",\n                    properties: {\n                      description: ReactDOMServer.renderToString(\n                        getStatusTable({\n                          type: \"deviceStatusMarker\",\n                          start,\n                          end,\n                          deviceStatus,\n                          activity,\n                          duration\n                        })\n                      ),\n                      icon: utils.getIcon(deviceStatus, activity, \"circle\")\n                    },\n                    geometry: end.location\n                  }\n                ]\n              : [\n                  ...features,\n                  {\n                    type: \"Feature\",\n                    properties: {\n                      description: ReactDOMServer.renderToString(\n                        getStatusTable({\n                          type: \"deviceStatusMarker\",\n                          start,\n                          end,\n                          deviceStatus,\n                          activity,\n                          duration\n                        })\n                      ),\n                      icon: utils.getIcon(deviceStatus, activity)\n                    },\n                    geometry: end.location || start.location\n                  }\n                ],\n          []\n        )\n      }\n    },\n    layout: {\n      \"icon-image\": \"{icon}\",\n      \"icon-allow-overlap\": false\n    }\n  });\n\n  mapRef.current.on(\"mouseenter\", newLayerId, event =>\n    mouseEnterCallback(event, mapRef, popupRef)\n  );\n\n  mapRef.current.on(\"mouseleave\", newLayerId, () =>\n    mouseLeaveCallback(mapRef, popupRef)\n  );\n};\n\nexport default {\n  plotLine,\n  plotMarkers\n};\n","class Line {\n  constructor({ type, coordinates }) {\n    this.type = type;\n    this.coordinates = coordinates;\n  }\n}\n\nclass Point {\n  constructor({ type, coordinates }) {\n    this.type = type;\n    this.coordinates = coordinates;\n  }\n}\n\nexport default {\n  Line,\n  Point\n};\n","import React from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n\nimport { utils } from \"./\";\n\nconst useMap = container => {\n  const mapRef = React.useRef();\n  React.useEffect(() => {\n    if (!mapRef || !mapRef.current)\n      mapRef.current = new mapboxgl.Map({\n        container,\n        style: \"mapbox://styles/mapbox/streets-v9\",\n        accessToken:\n          \"pk.eyJ1IjoiaHlwZXJ0cmFjay1kZXZvcHMiLCJhIjoiY2ptZzVndTduMWZ0YzNrbzFuNXR0cHUyOSJ9.Te8DokzaOXSVdh7ntUptyA\",\n        keyboard: true,\n        center: [0, 0]\n      });\n    mapRef.current.on(\"load\", () => {\n      utils.valid_device_status_states.forEach(status_type => {\n        mapRef.current.loadImage(\n          utils.getImageSource(status_type),\n          (error, image) =>\n            error\n              ? console.error(error)\n              : mapRef.current.addImage(status_type, image)\n        );\n      });\n    });\n  }, [container]);\n  return mapRef;\n};\n\nconst usePopup = (mapRef, options) => {\n  const popupRef = React.useRef(\n    new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    })\n  );\n  React.useEffect(() => {\n    mapRef.current.on(\"load\", () => {\n      popupRef.current.addTo(mapRef.current);\n    });\n  }, [mapRef, popupRef]);\n  return popupRef;\n};\n\nexport default {\n  useMap,\n  usePopup\n};\n","import { classes } from \"./\";\nconst trip_schema = require(\"../template/trip_schema.json\");\nconst LineString_schema = require(\"../template/LineString_schema.json\");\n\nconst Ajv = require(\"ajv\");\nconst ajv = new Ajv({ allErrors: true });\nconst trip_validator = ajv.compile(trip_schema);\nconst LineString_validator = ajv.compile(LineString_schema);\n\nconst parseGeofenceMarker = marker => {\n  const { arrival, geofence } = marker;\n  const arrivalPoint = new classes.Point(arrival.location.geometry);\n  const geofencePoint = new classes.Point(geofence.geometry);\n  const arrivalTime = arrival.location.recorded_at;\n  const geofenceId = geofence.geofence_id;\n  const geofenceMetadata = JSON.stringify(geofence.metadata, null, 2);\n  const radius = Number(geofence.radius);\n  return {\n    arrival: {\n      arrivalPoint,\n      arrivalTime\n    },\n    geofence: {\n      geofencePoint,\n      geofenceId,\n      geofenceMetadata,\n      radius\n    }\n  };\n};\n\nconst getStartEndData = ({ recorded_at, location }) => {\n  let acc = {};\n  if (recorded_at) acc.timestamp = recorded_at;\n  if (location && location.geometry)\n    acc.location = new classes.Point(location.geometry);\n  return acc;\n};\n\nconst parseDeviceStatusMarker = marker => {\n  const { activity, duration } = marker;\n  const deviceStatus = marker.value;\n  const end = getStartEndData(marker.end);\n  const start = getStartEndData(marker.start);\n  let extra = {};\n  if (activity) extra.activity = activity;\n  if (duration) extra.duration = duration;\n  return { start, end, deviceStatus, ...extra };\n};\n\nconst markerTypeMap = {\n  geofence: parseGeofenceMarker,\n  device_status: parseDeviceStatusMarker\n};\n\nconst parseMarker = ({ type, data }) => markerTypeMap[type](data);\n\nconst valid_device_status_states = [\n  \"disconnected\",\n  \"inactive\",\n  \"unknown\",\n  \"stop\",\n  \"walk\",\n  \"run\",\n  \"drive\"\n];\n\nconst getImageSource = variant =>\n  `${process.env.PUBLIC_URL}/assets/${variant}.png`;\n\nconst getIcon = (deviceStatus, activity) =>\n  valid_device_status_states.includes(activity)\n    ? activity\n    : valid_device_status_states.includes(deviceStatus)\n    ? deviceStatus\n    : \"unknown\";\n\nconst markersByType = markers => type => {\n  const allMarkers = markers.reduce(\n    (markers, currentMarker) => ({\n      ...markers,\n      [currentMarker.type]: markers[currentMarker.type]\n        ? [parseMarker(currentMarker), ...markers[currentMarker.type]]\n        : [parseMarker(currentMarker)]\n    }),\n    {}\n  );\n  return type && allMarkers[type] ? allMarkers[type] : allMarkers;\n};\n\nconst secondsToHms = d => {\n  d = Number(d);\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  const hDisplay = h > 0 ? h + \" h \" : \"\";\n  const mDisplay = m > 0 ? m + \" m \" : \"\";\n  const sDisplay = s > 0 ? s + \" s\" : \"\";\n  return hDisplay + mDisplay + sDisplay;\n};\n\nconst validatorMap = {\n  trip: trip_validator,\n  LineString: LineString_validator\n};\n\nconst validateInputJSON = json => {\n  const validate = validatorMap[json.type || \"trip\"];\n  const valid = validate ? validate(json) : true;\n  return !valid ? validate.errors : false;\n};\n\nexport default {\n  parseMarker,\n  getIcon,\n  secondsToHms,\n  markersByType,\n  validateInputJSON,\n  valid_device_status_states,\n  getImageSource\n};\n","import React from \"react\";\nimport {\n  TextArea,\n  Dialog,\n  Button,\n  Classes,\n  Intent,\n  FileInput,\n  HTMLTable\n} from \"@blueprintjs/core\";\n\nimport { utils } from \"./../common\";\n\nimport \"./component.css\";\n\nconst TripInfoModal = ({\n  trip,\n  showTripModal,\n  updateJson,\n  hideModal,\n  showModal,\n  fetchError\n}) => {\n  const [userJson, updateUserJson] = React.useState(\n    JSON.stringify(trip, null, \"\\t\")\n  );\n  const [filename, updateFilename] = React.useState(undefined);\n  const [errors, updateErrors] = React.useState(undefined);\n\n  React.useEffect(() => {\n    if (JSON.stringify(trip) !== JSON.stringify(userJson))\n      updateUserJson(JSON.stringify(trip, null, \"\\t\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trip]);\n\n  React.useEffect(() => {\n    if (fetchError && fetchError !== errors) updateErrors({ fetchError });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchError]);\n\n  const validateInput = tripJSON => {\n    const validationErrors = utils.validateInputJSON(tripJSON);\n    if (validationErrors && validationErrors.length)\n      updateErrors(validationErrors);\n    else updateErrors(null);\n    return Boolean(validationErrors);\n  };\n\n  const handleUpdateJson = e => {\n    try {\n      const updatedJson = JSON.parse(userJson);\n      updateJson(updatedJson);\n      hideModal();\n    } catch (error) {\n      console.error(error);\n      updateErrors(error);\n    }\n  };\n\n  const handleCloseModal = e => {\n    updateUserJson(JSON.stringify(trip, null, \"\\t\"));\n    hideModal();\n  };\n\n  const handleFileUpload = event => {\n    event && event.preventDefault();\n    const fileReader = new FileReader();\n    const file = event.target.files[0];\n    updateFilename(file && file.name ? file.name : undefined);\n    fileReader.readAsText(file, \"UTF-8\");\n    fileReader.onload = onloadEvent => {\n      const derivedFileValue = onloadEvent.target.result;\n      const tripJSON = JSON.parse(derivedFileValue);\n      updateUserJson(derivedFileValue);\n      if (!validateInput(tripJSON)) {\n        updateJson(tripJSON);\n        hideModal();\n      }\n    };\n  };\n\n  const handleBlurEvent = event => {\n    event && event.preventDefault();\n    const value = event.target.value;\n    if (value)\n      try {\n        const tripJSON = JSON.parse(value);\n        validateInput(tripJSON);\n      } catch (error) {\n        console.error(error);\n        updateErrors(error);\n      }\n  };\n\n  return (\n    <>\n      <Button\n        intent={Intent.SUCCESS}\n        className={\"show-trip-button\"}\n        onClick={() => (showTripModal ? hideModal() : showModal())}\n      >\n        Update JSON\n      </Button>\n      <Dialog\n        isOpen={errors || showTripModal}\n        title=\"Add your own JSON\"\n        onClose={hideModal}\n        className=\"dialog\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <div className=\"dialog-container\">\n            <TextArea\n              value={userJson}\n              disabled={false}\n              onChange={e => updateUserJson(e.target.value)}\n              className={\"user-summary-input\"}\n              placeholder={\"Paste trip_summary here\"}\n              onBlur={handleBlurEvent}\n            />\n            {errors ? (\n              <div className={\"error-table-container\"}>\n                {Array.isArray(errors) ? (\n                  <HTMLTable className={\"error-table\"} bordered>\n                    <caption>\n                      There {errors.length > 1 ? \"are\" : \"is an\"}{\" \"}\n                      {errors.length > 1 ? errors.length : \"\"} issue\n                      {errors.length > 1 ? \"s\" : \"\"}\n                    </caption>\n                    <thead>\n                      <tr>\n                        <th>Location</th>\n                        <th>Issue</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {errors.map(error => (\n                        <tr key={error.dataPath}>\n                          <td>\n                            <div className=\"table-content\">\n                              {error.dataPath}\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"table-content\">{error.message}</div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </HTMLTable>\n                ) : (\n                  <div className=\"error-table error\">\n                    {errors.message ? errors.message : JSON.stringify(errors)}\n                  </div>\n                )}\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <FileInput\n              text={filename}\n              buttonText={\"Browse\"}\n              className=\"file-input\"\n              onInputChange={handleFileUpload}\n              inputProps={{ accept: \".json\" }}\n            />\n            <Button\n              disabled={(errors && errors.length) || !userJson}\n              onClick={handleCloseModal}\n            >\n              Close\n            </Button>\n            <Button\n              intent={Intent.PRIMARY}\n              disabled={(errors && errors.length) || !userJson}\n              onClick={handleUpdateJson}\n            >\n              Update\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default TripInfoModal;\n","import React from \"react\";\n\nimport { utils } from \"./../common\";\n\nimport \"./component.css\";\n\nconst months = [\n  \"jan\",\n  \"feb\",\n  \"mar\",\n  \"apr\",\n  \"may\",\n  \"jun\",\n  \"jul\",\n  \"aug\",\n  \"sep\",\n  \"oct\",\n  \"nov\",\n  \"dec\"\n];\n\nconst formatDate = timestamp =>\n  months[timestamp.getMonth()] +\n  \" \" +\n  timestamp.getDate() +\n  \", \" +\n  timestamp.getFullYear() +\n  \" \" +\n  timestamp.getHours() +\n  \":\" +\n  timestamp.getMinutes() +\n  \":\" +\n  timestamp.getSeconds();\n\nconst rowMap = {\n  deviceStatusMarker: ({ start, end, deviceStatus, activity, duration }) => (\n    <tbody>\n      {start ? (\n        <tr className=\"capitalize\">\n          <td>Start Time</td>\n          <td>{formatDate(new Date(start.timestamp))}</td>\n        </tr>\n      ) : null}\n      {end ? (\n        <tr className=\"capitalize\">\n          <td>End Time</td>\n          <td>{formatDate(new Date(end.timestamp))}</td>\n        </tr>\n      ) : null}\n      {duration ? (\n        <tr>\n          <td>Duration</td>\n          <td>{utils.secondsToHms(duration)}</td>\n        </tr>\n      ) : null}\n      {activity ? (\n        <tr>\n          <td>Activity</td>\n          <td className=\"capitalize\">{activity}</td>\n        </tr>\n      ) : null}\n    </tbody>\n  ),\n  locationMarker: ({ coordinates: [lat, lng], alt, recorded_at }) => (\n    <tbody>\n      <tr>\n        <td>Coordinates</td>\n        <td className=\"capitalize\">\n          {lat} {lng}\n        </td>\n      </tr>\n      {alt ? (\n        <tr>\n          <td>Altitude</td>\n          <td className=\"capitalize\">{alt}</td>\n        </tr>\n      ) : null}\n      {recorded_at ? (\n        <tr>\n          <td>Recorded at</td>\n          <td className=\"capitalize\">{formatDate(new Date(recorded_at))}</td>\n        </tr>\n      ) : null}\n    </tbody>\n  )\n};\n\nconst headerMap = {\n  locationMarker: () => \"location\",\n  deviceStatusMarker: ({ deviceStatus }) => deviceStatus\n};\n\nconst DeviceStatusTable = ({ type, ...props }) => (\n  <table className=\"device-status-table\">\n    <thead>\n      <tr>\n        <th colSpan={2} className=\"capitalize\">\n          {headerMap[type](props)}\n        </th>\n      </tr>\n    </thead>\n    {rowMap[type](props)}\n  </table>\n);\n\nexport default DeviceStatusTable;\n","import React from \"react\";\n\nimport TripInfoModal from \"./components/TripInfoModal\";\nimport DeviceStatusTable from \"./components/DeviceStatusTable\";\n\nimport { mapUtils, hooks, classes, utils } from \"./common\";\n\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"./App.css\";\n\nconst mapContainerId = \"map-container\";\n\nconst getStatusTable = props => <DeviceStatusTable {...props} />;\n\nconst params = new URLSearchParams(window.location.search);\n\nconst gistURL = params.get(\"gist\");\n\nconst locationArrays = params.get(\"locations\");\n\nconst shed_animation = params.get(\"shed_animation\") === \"true\";\n\nconst coordinates = JSON.parse(locationArrays);\n\nfunction App() {\n  const [showTripModal, updateShowTripModal] = React.useState(true);\n  const [json, updateJson] = React.useState(undefined);\n  const [error, updateError] = React.useState(undefined);\n  const mapRef = hooks.useMap(mapContainerId);\n  const popupRef = hooks.usePopup(mapRef);\n\n  const handleJsonUpdate = (json, fromLocalstorage, showModal) => {\n    updateJson(json);\n    if (!fromLocalstorage)\n      localStorage.setItem(\"previousJSON\", JSON.stringify(json, null, \"\\t\"));\n    if (json.type === \"LineString\") {\n      const line = new classes.Line(json);\n      mapUtils.plotLine(mapRef, popupRef, line, getStatusTable, {\n        shed_animation\n      });\n      if (!showModal) updateShowTripModal(false);\n    } else {\n      try {\n        const { locations, markers } = json.summary;\n        const line = new classes.Line(locations);\n        const deviceStatusMarkers = utils.markersByType(markers)(\n          \"device_status\"\n        );\n        mapUtils.plotLine(mapRef, popupRef, line, getStatusTable, {\n          shed_animation\n        });\n        mapUtils.plotMarkers(\n          mapRef,\n          popupRef,\n          deviceStatusMarkers,\n          getStatusTable\n        );\n      } catch (error) {\n        updateError(error);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (gistURL) {\n      const gistId = gistURL.split(\"/\").pop();\n      fetch(`https://api.github.com/gists/${gistId}`)\n        .then(response => response.json())\n        .then(data => {\n          if (data.message) updateError(data.message);\n          else {\n            const json = JSON.parse(\n              data.files[\"default.json\"]\n                ? data.files[\"default.json\"].content\n                : Object.values(data.files)[0].content\n            );\n            updateJson(json);\n          }\n        })\n        .catch(error => updateError(error));\n    } else if (coordinates && coordinates.length) {\n      const line = new classes.Line({ coordinates, type: \"LineString\" });\n      mapRef.current.on(\"load\", () => handleJsonUpdate(line, true, false));\n    } else {\n      const previousJSON = localStorage.getItem(\"previousJSON\");\n      const tripJSON = JSON.parse(previousJSON);\n      if (tripJSON)\n        mapRef.current.on(\"load\", () => handleJsonUpdate(tripJSON, true));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <div id={mapContainerId} />\n      <TripInfoModal\n        fetchError={error}\n        trip={json}\n        showTripModal={showTripModal}\n        showModal={() => updateShowTripModal(true)}\n        hideModal={() => updateShowTripModal(false)}\n        updateJson={handleJsonUpdate}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}