{"version":3,"sources":["common/map-utils.js","common/map-classes.js","common/map-hooks.js","common/utils.js","components/TripInfoModal.js","components/DeviceStatusTable.js","App.js","index.js"],"names":["getNewLayerRemoveOldLayer","mapRef","primitive","newLayerId","current","getLayer","oldLayerId","removeLayer","removeSource","mouseEnterCallback","e","popupRef","getCanvas","style","cursor","coordinates","features","geometry","slice","description","properties","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","mouseClickCallback","deviceStatusMarker","getStatusTable","start","end","location","ReactDOMServer","renderToString","type","mouseLeaveCallback","remove","plotLine","line","options","shed_animation","addLayer","id","source","data","layout","paint","fitBounds","point","mapboxgl","LngLat","initBounds","LngLatBounds","reduce","bounds","lat","extend","computeBounds","linear","padding","top","bottom","left","right","map","alt","recorded_at","icon","classes","Point","on","event","useMarkers","markersRef","deviceStatusMarkers","length","forEach","marker","markerList","deviceStatus","activity","variant","utils","getIcon","markerElement","document","createElement","className","innerHTML","getImageSource","addEventListener","push","Marker","Line","this","useMap","container","React","useRef","useEffect","Map","accessToken","keyboard","center","usePopup","Popup","closeButton","closeOnClick","trip_schema","require","LineString_schema","ajv","allErrors","trip_validator","compile","LineString_validator","getStartEndData","acc","timestamp","markerTypeMap","geofence","arrival","arrivalPoint","geofencePoint","arrivalTime","geofenceId","geofence_id","geofenceMetadata","JSON","stringify","metadata","radius","Number","device_status","duration","value","extra","parseMarker","valid_device_status_states","validatorMap","trip","LineString","includes","secondsToHms","d","h","floor","m","s","markersByType","markers","allMarkers","currentMarker","validateInputJSON","json","validate","errors","process","TripInfoModal","showTripModal","updateJson","hideModal","showModal","fetchError","useState","userJson","updateUserJson","undefined","filename","updateFilename","updateErrors","validateInput","tripJSON","validationErrors","Boolean","intent","Intent","SUCCESS","onClick","isOpen","title","onClose","Classes","DIALOG_BODY","disabled","onChange","target","placeholder","onBlur","preventDefault","parse","error","console","Array","isArray","bordered","key","dataPath","message","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","text","buttonText","onInputChange","fileReader","FileReader","file","files","name","readAsText","onload","onloadEvent","derivedFileValue","result","inputProps","accept","PRIMARY","updatedJson","months","formatDate","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","rowMap","Date","locationMarker","headerMap","DeviceStatusTable","props","colSpan","mapContainerId","params","URLSearchParams","window","search","gistURL","get","locationArrays","App","updateShowTripModal","updateError","hooks","locationPopupRef","deviceStatusPopupRef","offset","handleJsonUpdate","fromLocalstorage","localStorage","setItem","mapUtils","summary","locations","gistId","split","pop","fetch","then","response","content","Object","values","catch","previousJSON","getItem","ReactDOM","render","getElementById"],"mappings":"yfAOA,IASMA,EAA4B,SAACC,EAAQC,GACzC,IAAIC,EAAaD,EACjB,GACED,EAAOG,QAAQC,SAASH,IACxBD,EAAOG,QAAQC,SAAf,UAA2BH,EAA3B,MACA,CACAC,EAAaF,EAAOG,QAAQC,SAASH,GAAxB,UACNA,EADM,KAETA,EACJ,IAAMI,EAAaL,EAAOG,QAAQC,SAASH,GACvCA,EADe,UAEZA,EAFY,KAGnBD,EAAOG,QAAQG,YAAYD,GAC3BL,EAAOG,QAAQI,aAAaF,GAE9B,OAAOH,GAGHM,EAAqB,SAACC,EAAGT,EAAQU,GACrCV,EAAOG,QAAQQ,YAAYC,MAAMC,OAAS,UAG1C,IAFA,IAAIC,EAAcL,EAAEM,SAAS,GAAGC,SAASF,YAAYG,QAC/CC,EAAcT,EAAEM,SAAS,GAAGI,WAAWD,YACtCE,KAAKC,IAAIZ,EAAEa,OAAOC,IAAMT,EAAY,IAAM,KAC/CA,EAAY,IAAML,EAAEa,OAAOC,IAAMT,EAAY,GAAK,KAAO,IAC3DJ,EAASP,QACNqB,UAAUV,GACVW,QAAQP,GACRQ,MAAM1B,EAAOG,UAGZwB,EAAqB,SACzBlB,EACAT,EACAU,EACAkB,EACAC,GACI,IACIC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,IACf/B,EAAOG,QAAQQ,YAAYC,MAAMC,OAAS,UAC1C,IAMIC,GALFgB,GAASA,EAAME,SACXF,EAAME,SAASlB,YACfiB,GAAOA,EAAIC,SACXD,EAAIC,SAASlB,YACb,IACqBG,QACrBC,EAAce,IAAeC,eACjCL,E,yWAAe,CAAD,CACZM,KAAM,sBACHP,KAGPlB,EAASP,QACNqB,UAAUV,GACVW,QAAQP,GACRQ,MAAM1B,EAAOG,UAGZiC,EAAqB,SAACpC,EAAQU,GAClCV,EAAOG,QAAQQ,YAAYC,MAAMC,OAAS,GAC1CH,EAASP,QAAQkC,UAqIJ,GACbC,SAnIe,SAACtC,EAAQU,EAAU6B,EAAMV,EAAgBW,GAAa,IAC7DC,EAAmBD,EAAnBC,eACJvC,EAAaH,EAA0BC,EAAQ,SACnDA,EAAOG,QACJuC,SAAS,CACRC,GAAIzC,EACJiC,KAAM,OACNS,OAAQ,CACNT,KAAM,UACNU,KAAM,CACJV,KAAM,UACNhB,WAAY,GACZH,SAAUuB,IAGdO,OAAQ,CACN,YAAa,QACb,WAAY,SAEdC,MAAO,CACL,aAAc,UACd,aAAc,KAGjBC,UAhGiB,SAAAlC,GACpB,IAAMmC,EAAQ,IAAIC,IAASC,OAAOrC,EAAY,GAAG,GAAIA,EAAY,GAAG,IAC9DsC,EAAa,IAAIF,IAASG,aAAaJ,EAAOA,GACpD,OAAOnC,EAAYwC,QACjB,SAACC,EAAD,0BAAUhC,EAAV,KAAeiC,EAAf,YAAwBD,EAAOE,OAAO,IAAIP,IAASC,OAAO5B,EAAKiC,MAC/DJ,GA2FWM,CAAcnB,EAAKzB,aAAc,CAC1C6C,OAAQlB,EACRmB,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,MAGrD9D,EAAaH,EAA0BC,EAAQ,mBAC/CA,EAAOG,QAAQuC,SAAS,CACtBC,GAAIzC,EACJiC,KAAM,SACNS,OAAQ,CACNT,KAAM,UACNU,KAAM,CACJV,KAAM,oBACNpB,SAAUwB,EAAKzB,YAAYmD,KAAI,mCAAE1C,EAAF,KAAOiC,EAAP,KAAYU,EAAZ,KAAiBC,EAAjB,WAAmC,CAChEhC,KAAM,UACNhB,WAAY,CACVD,YAAae,IAAeC,eAC1BL,EAAe,CACbM,KAAM,iBACNrB,YAAa,CAAC0C,EAAKjC,GACnB2C,MACAC,iBAGJC,KAAM,UAERpD,SAAU,IAAIqD,EAAQC,MAAM,CAC1BnC,KAAM,QACNrB,YAAa,CAACS,EAAKiC,WAK3BV,OAAQ,CACN,aAAc,YACd,sBAAsB,KAI1B9C,EAAOG,QAAQoE,GAAG,aAAcrE,GAAY,SAAAsE,GAAK,OAC/ChE,EAAmBgE,EAAOxE,EAAQU,MAGpCV,EAAOG,QAAQoE,GAAG,aAAcrE,GAAY,kBAC1CkC,EAAmBpC,EAAQU,OAgE7B+D,WA5DiB,SACjBzE,EACAU,EACAgE,EACAC,EACA9C,GAEI6C,EAAWvE,SAAWuE,EAAWvE,QAAQyE,QAC3CF,EAAWvE,QAAQ0E,SAAQ,SAAAC,GAAM,OAAIA,EAAOzC,YAC9C,IAAI0C,EAAa,GACX7E,EAAaH,EAA0BC,EAAQ,uBACrD2E,EAAoBE,SAAQ,SAAAjD,GAAuB,IACzCE,EAAuCF,EAAvCE,MAAOC,EAAgCH,EAAhCG,IAAKiD,EAA2BpD,EAA3BoD,aAAcC,EAAarD,EAAbqD,SAClC,GAAInD,GAASC,EAAK,CAChB,IAAMmD,EAAUC,EAAMC,QAAQH,GAAYD,GACpCK,EAAgBC,SAASC,cAAc,OAC7CF,EAAcG,UAAY,mBAE1BH,EAAcI,UAAd,mBAAsCN,EAAMO,eAC1CR,GADF,gBAESA,EAFT,2BAIAG,EAAcM,iBAAiB,cAAc,SAAAnB,GAAK,OAChD7C,EACE6C,EACAxE,EACAU,EACAkB,EACAC,MAGJwD,EAAcM,iBAAiB,cAAc,kBAC3CvD,EAAmBpC,EAAQU,MAE7B,IAAMsB,EACJF,GAASA,EAAME,SACXF,EAAME,SAASlB,YACfiB,GAAOA,EAAIC,SACXD,EAAIC,SAASlB,YACb,GACNiE,EAAWa,KACT,IAAI1C,IAAS2C,OAAOR,GACjB7D,UAAUQ,GACVN,MAAM1B,EAAOG,cAKtBH,EAAOG,QAAQoE,GAAG,aAAcrE,GAAY,SAAAsE,GAAK,OAC/ChE,EAAmBgE,EAAOxE,EAAQU,MAGpCV,EAAOG,QAAQoE,GAAG,aAAcrE,GAAY,kBAC1CkC,EAAmBpC,EAAQU,MAE7BgE,EAAWvE,QAAU4E,I,QChMR,GACbe,KAdA,cAAoC,IAAtB3D,EAAqB,EAArBA,KAAMrB,EAAe,EAAfA,YAAe,oBACjCiF,KAAK5D,KAAOA,EACZ4D,KAAKjF,YAAcA,GAarBwD,MARA,cAAoC,IAAtBnC,EAAqB,EAArBA,KAAMrB,EAAe,EAAfA,YAAe,oBACjCiF,KAAK5D,KAAOA,EACZ4D,KAAKjF,YAAcA,I,ykBCPvB,IAgCe,GACbkF,OAjCa,SAAAC,GACb,IAAMjG,EAASkG,IAAMC,SAYrB,OAXAD,IAAME,WAAU,WACTpG,GAAWA,EAAOG,UACrBH,EAAOG,QAAU,IAAI+C,IAASmD,IAAI,CAChCJ,YACArF,MAAO,oCACP0F,YACE,yGACFC,UAAU,EACVC,OAAQ,CAAC,EAAG,QAEf,CAACP,IACGjG,GAqBPyG,SAlBe,SAACzG,GAA0B,IAAlBwC,EAAiB,uDAAP,GAC5B9B,EAAWwF,IAAMC,OACrB,IAAIjD,IAASwD,MAAb,GACEC,aAAa,EACbC,cAAc,GACXpE,KAQP,OALA0D,IAAME,WAAU,WACdpG,EAAOG,QAAQoE,GAAG,QAAQ,WACxB7D,EAASP,QAAQuB,MAAM1B,EAAOG,cAE/B,CAACH,EAAQU,IACLA,I,ilBC/BT,IAAMmG,EAAcC,EAAQ,IACtBC,EAAoBD,EAAQ,IAG5BE,EAAM,IADAF,EAAQ,IACR,CAAQ,CAAEG,WAAW,IAC3BC,EAAiBF,EAAIG,QAAQN,GAC7BO,EAAuBJ,EAAIG,QAAQJ,GAwBnCM,EAAkB,SAAC,GAA+B,IAA7BlD,EAA4B,EAA5BA,YAAanC,EAAe,EAAfA,SAClCsF,EAAM,GAIV,OAHInD,IAAamD,EAAIC,UAAYpD,GAC7BnC,GAAYA,EAAShB,WACvBsG,EAAItF,SAAW,IAAIqC,EAAQC,MAAMtC,EAAShB,WACrCsG,GAcHE,EAAgB,CACpBC,SA1C0B,SAAA3C,GAAW,IAC7B4C,EAAsB5C,EAAtB4C,QAASD,EAAa3C,EAAb2C,SACXE,EAAe,IAAItD,EAAQC,MAAMoD,EAAQ1F,SAAShB,UAClD4G,EAAgB,IAAIvD,EAAQC,MAAMmD,EAASzG,UAKjD,MAAO,CACL0G,QAAS,CACPC,eACAE,YAPgBH,EAAQ1F,SAASmC,aASnCsD,SAAU,CACRG,gBACAE,WAVeL,EAASM,YAWxBC,iBAVqBC,KAAKC,UAAUT,EAASU,SAAU,KAAM,GAW7DC,OAVWC,OAAOZ,EAASW,WAoC/BE,cAb8B,SAAAxD,GAAW,IACjCG,EAAuBH,EAAvBG,SAAUsD,EAAazD,EAAbyD,SACZvD,EAAeF,EAAO0D,MACtBzG,EAAMsF,EAAgBvC,EAAO/C,KAC7BD,EAAQuF,EAAgBvC,EAAOhD,OACjC2G,EAAQ,GAGZ,OAFIxD,IAAUwD,EAAMxD,SAAWA,GAC3BsD,IAAUE,EAAMF,SAAWA,GACxB,GAAEzG,QAAOC,MAAKiD,gBAAiByD,KAQlCC,EAAc,SAAC,GAAD,IAAGvG,EAAH,EAAGA,KAAMU,EAAT,EAASA,KAAT,OAClB2E,EAAcrF,GAAQqF,EAAcrF,GAAMU,GAAQA,GAE9C8F,EAA6B,CACjC,eACA,WACA,UACA,OACA,OACA,MACA,SAsCIC,EAAe,CACnBC,KAAM3B,EACN4B,WAAY1B,GASC,GACbsB,cACAtD,QA7Cc,SAACJ,EAAcC,GAAf,OACd0D,EAA2BI,SAAS9D,GAChCA,EACA0D,EAA2BI,SAAS/D,GACpCA,EACA,WAyCJgE,aA1BmB,SAAAC,GACnBA,EAAIZ,OAAOY,GACX,IAAMC,EAAI9H,KAAK+H,MAAMF,EAAI,MACnBG,EAAIhI,KAAK+H,MAAOF,EAAI,KAAQ,IAC5BI,EAAIjI,KAAK+H,MAAOF,EAAI,KAAQ,IAKlC,OAHiBC,EAAI,EAAIA,EAAI,MAAQ,KACpBE,EAAI,EAAIA,EAAI,MAAQ,KACpBC,EAAI,EAAIA,EAAI,KAAO,KAmBpCC,cAxCoB,SAAAC,GAAO,OAAI,SAAApH,GAC/B,IAAMqH,EAAaD,EAAQjG,QACzB,SAACiG,EAASE,GAAV,YACKF,EADL,eAEGE,EAActH,KAAOoH,EAAQE,EAActH,MAAtB,CACjBuG,EAAYe,IADK,mBACcF,EAAQE,EAActH,QACtD,CAACuG,EAAYe,QAEnB,IAEF,OAAOtH,GAAQqH,EAAWrH,GAAQqH,EAAWrH,GAAQqH,IA+BrDE,kBAXwB,SAAAC,GACxB,IAAMC,EAAWhB,EAAae,EAAKxH,MAAQ,QAE3C,SADcyH,GAAWA,EAASD,KAClBC,EAASC,QASzBlB,6BACAjD,eArDqB,SAAAR,GAAO,gBACzB4E,SADyB,mBACQ5E,EADR,UCuHf6E,G,MA5KO,SAAC,GAOhB,IANLlB,EAMI,EANJA,KACAmB,EAKI,EALJA,cACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WACI,EAC+BlE,IAAMmE,SACvCpC,KAAKC,UAAUW,EAAM,KAAM,OAFzB,mBACGyB,EADH,KACaC,EADb,OAI+BrE,IAAMmE,cAASG,GAJ9C,mBAIGC,EAJH,KAIaC,EAJb,OAK2BxE,IAAMmE,cAASG,GAL1C,mBAKGX,EALH,KAKWc,EALX,KAOJzE,IAAME,WAAU,WACV6B,KAAKC,UAAUW,KAAUZ,KAAKC,UAAUoC,IAC1CC,EAAetC,KAAKC,UAAUW,EAAM,KAAM,SAE3C,CAACA,IAEJ3C,IAAME,WAAU,WACVgE,GAAcA,IAAeP,GAAQc,EAAa,CAAEP,iBAEvD,CAACA,IAEJ,IAAMQ,EAAgB,SAAAC,GACpB,IAAMC,EAAmB3F,EAAMuE,kBAAkBmB,GAIjD,OAHIC,GAAoBA,EAAiBlG,OACvC+F,EAAaG,GACVH,EAAa,MACXI,QAAQD,IAiDjB,OACE,oCACE,kBAAC,IAAD,CACEE,OAAQC,IAAOC,QACf1F,UAAW,mBACX2F,QAAS,kBAAOnB,EAAgBE,IAAcC,MAHhD,eAOA,kBAAC,IAAD,CACEiB,OAAQvB,GAAUG,EAClBqB,MAAM,oBACNC,QAASpB,EACT1E,UAAU,UAEV,yBAAKA,UAAW+F,IAAQC,aACtB,yBAAKhG,UAAU,oBACb,kBAAC,IAAD,CACEgD,MAAO8B,EACPmB,UAAU,EACVC,SAAU,SAAAjL,GAAC,OAAI8J,EAAe9J,EAAEkL,OAAOnD,QACvChD,UAAW,qBACXoG,YAAa,0BACbC,OApCY,SAAArH,GACtBA,GAASA,EAAMsH,iBACf,IAAMtD,EAAQhE,EAAMmH,OAAOnD,MAC3B,GAAIA,EACF,IACE,IAAMqC,EAAW5C,KAAK8D,MAAMvD,GAC5BoC,EAAcC,GACd,MAAOmB,GACPC,QAAQD,MAAMA,GACdrB,EAAaqB,OA6BRnC,EACC,yBAAKrE,UAAW,yBACb0G,MAAMC,QAAQtC,GACb,kBAAC,IAAD,CAAWrE,UAAW,cAAe4G,UAAQ,GAC3C,0CACSvC,EAAOjF,OAAS,EAAI,MAAQ,QAAS,IAC3CiF,EAAOjF,OAAS,EAAIiF,EAAOjF,OAAS,GAFvC,SAGGiF,EAAOjF,OAAS,EAAI,IAAM,IAE7B,+BACE,4BACE,wCACA,uCAGJ,+BACGiF,EAAO5F,KAAI,SAAA+H,GAAK,OACf,wBAAIK,IAAKL,EAAMM,UACb,4BACE,yBAAK9G,UAAU,iBACZwG,EAAMM,WAGX,4BACE,yBAAK9G,UAAU,iBAAiBwG,EAAMO,gBAOhD,yBAAK/G,UAAU,qBACZqE,EAAO0C,QAAU1C,EAAO0C,QAAUtE,KAAKC,UAAU2B,KAItD,OAGR,yBAAKrE,UAAW+F,IAAQiB,eACtB,yBAAKhH,UAAW+F,IAAQkB,uBACtB,kBAAC,IAAD,CACEC,KAAMjC,EACNkC,WAAY,SACZnH,UAAU,aACVoH,cApGa,SAAApI,GACvBA,GAASA,EAAMsH,iBACf,IAAMe,EAAa,IAAIC,WACjBC,EAAOvI,EAAMmH,OAAOqB,MAAM,GAChCtC,EAAeqC,GAAQA,EAAKE,KAAOF,EAAKE,UAAOzC,GAC/CqC,EAAWK,WAAWH,EAAM,SAC5BF,EAAWM,OAAS,SAAAC,GAClB,IAAMC,EAAmBD,EAAYzB,OAAO2B,OACtCzC,EAAW5C,KAAK8D,MAAMsB,GAC5B9C,EAAe8C,GACVzC,EAAcC,KACjBZ,EAAWY,GACXX,OAyFMqD,WAAY,CAAEC,OAAQ,WAExB,kBAAC,IAAD,CACE/B,SAAW5B,GAAUA,EAAOjF,SAAY0F,EACxCa,QA9Ga,SAAA1K,GACvB8J,EAAetC,KAAKC,UAAUW,EAAM,KAAM,OAC1CqB,MA0GQ,SAMA,kBAAC,IAAD,CACEc,OAAQC,IAAOwC,QACfhC,SAAW5B,GAAUA,EAAOjF,SAAY0F,EACxCa,QAhIa,SAAA1K,GACvB,IACE,IAAMiN,EAAczF,KAAK8D,MAAMzB,GAC/BL,EAAWyD,GACXxD,IACA,MAAO8B,GACPC,QAAQD,MAAMA,GACdrB,EAAaqB,MAsHP,gB,QCvKN2B,EAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,EAAa,SAAArG,GAAS,OAC1BoG,EAAOpG,EAAUsG,YACjB,IACAtG,EAAUuG,UACV,KACAvG,EAAUwG,cACV,IACAxG,EAAUyG,WACV,IACAzG,EAAU0G,aACV,IACA1G,EAAU2G,cAENC,EAAS,CACbvM,mBAAoB,gBAAGE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAmBkD,GAA7B,EAAeD,aAAf,EAA6BC,UAAUsD,EAAvC,EAAuCA,SAAvC,OAClB,+BACGzG,EACC,wBAAI0D,UAAU,cACZ,0CACA,4BAAKoI,EAAW,IAAIQ,KAAKtM,EAAMyF,cAE/B,KACHxF,EACC,wBAAIyD,UAAU,cACZ,wCACA,4BAAKoI,EAAW,IAAIQ,KAAKrM,EAAIwF,cAE7B,KACHgB,EACC,4BACE,wCACA,4BAAKpD,EAAM6D,aAAaT,KAExB,KACHtD,EACC,4BACE,wCACA,wBAAIO,UAAU,cAAcP,IAE5B,OAGRoJ,eAAgB,gCAAGvN,YAAH,GAAiB0C,EAAjB,KAAsBjC,EAAtB,KAA4B2C,EAA5B,EAA4BA,IAAKC,EAAjC,EAAiCA,YAAjC,OACd,+BACE,4BACE,2CACA,wBAAIqB,UAAU,cACXhC,EADH,IACSjC,IAGV2C,EACC,4BACE,wCACA,wBAAIsB,UAAU,cAActB,IAE5B,KACHC,EACC,4BACE,2CACA,wBAAIqB,UAAU,cAAcoI,EAAW,IAAIQ,KAAKjK,MAEhD,QAKJmK,EAAY,CAChBD,eAAgB,iBAAM,YACtBzM,mBAAoB,qBAAGoD,eAgBVuJ,EAbW,SAAC,GAAD,IAAGpM,EAAH,EAAGA,KAASqM,EAAZ,+BACxB,2BAAOhJ,UAAU,uBACf,+BACE,4BACE,wBAAIiJ,QAAS,EAAGjJ,UAAU,cACvB8I,EAAUnM,GAAMqM,MAItBL,EAAOhM,GAAMqM,KC1FZE,G,qBAAiB,iBAEjB7M,EAAiB,SAAA2M,GAAK,OAAI,kBAAC,EAAsBA,IAEjDG,GAAS,IAAIC,gBAAgBC,OAAO7M,SAAS8M,QAE7CC,GAAUJ,GAAOK,IAAI,QAErBC,GAAiBN,GAAOK,IAAI,aAE5BvM,GAAkD,SAAjCkM,GAAOK,IAAI,kBAE5BlO,GAAcmH,KAAK8D,MAAMkD,IA8FhBC,OA5Ff,WAAgB,IAAD,EACgChJ,IAAMmE,UAAS,GAD/C,mBACNL,EADM,KACSmF,EADT,OAEcjJ,IAAMmE,cAASG,GAF7B,mBAENb,EAFM,KAEAM,EAFA,OAGgB/D,IAAMmE,cAASG,GAH/B,mBAGNwB,EAHM,KAGCoD,EAHD,KAIPpP,EAASqP,EAAMrJ,OAAO0I,GACtBY,EAAmBD,EAAM5I,SAASzG,GAClCuP,EAAuBF,EAAM5I,SAASzG,EAAQ,CAAEwP,OAAQ,KACxD9K,EAAawB,IAAMC,OAAO,IAE1BsJ,EAAmB,SAAC9F,EAAM+F,EAAkBvF,GAIhD,GAHAF,EAAWN,GACN+F,GACHC,aAAaC,QAAQ,eAAgB3H,KAAKC,UAAUyB,EAAM,KAAM,OAChD,eAAdA,EAAKxH,KAAuB,CAC9B,IAAMI,EAAO,IAAI8B,EAAQyB,KAAK6D,GAC9BkG,EAASvN,SAAStC,EAAQsP,EAAkB/M,EAAMV,EAAgB,CAChEY,oBAEG0H,GAAWgF,GAAoB,QAEpC,IAAK,IAAD,EAC6BxF,EAAKmG,QAA5BC,EADN,EACMA,UAAWxG,EADjB,EACiBA,QACbhH,EAAO,IAAI8B,EAAQyB,KAAKiK,GACxBpL,EAAsBQ,EAAMmE,cAAcC,EAApBpE,CAC1B,iBAEF0K,EAASvN,SAAStC,EAAQsP,EAAkB/M,EAAMV,EAAgB,CAChEY,oBAEFoN,EAASpL,WACPzE,EACAuP,EACA7K,EACAC,EACA9C,GAEF,MAAOmK,GACPC,QAAQD,MAAMA,GACdoD,EAAYpD,KAuClB,OAlCA9F,IAAME,WAAU,WACd,GAAI2I,GAAS,CACX,IAAMiB,EAASjB,GAAQkB,MAAM,KAAKC,MAClCC,MAAM,gCAAD,OAAiCH,IACnCI,MAAK,SAAAC,GAAQ,OAAIA,EAAS1G,UAC1ByG,MAAK,SAAAvN,GACJ,GAAIA,EAAK0J,QACPN,QAAQD,MAAMnJ,EAAK0J,SACnB6C,EAAYvM,EAAK0J,aACZ,CACL,IAAM5C,EAAO1B,KAAK8D,MAChBlJ,EAAKmK,MAAM,gBACPnK,EAAKmK,MAAM,gBAAgBsD,QAC3BC,OAAOC,OAAO3N,EAAKmK,OAAO,GAAGsD,SAEnCrG,EAAWN,OAGd8G,OAAM,SAAAzE,GACLC,QAAQD,MAAMA,GACdoD,EAAYpD,WAEX,GAAIlL,IAAeA,GAAY8D,OAAQ,CAC5C,IAAMrC,EAAO,IAAI8B,EAAQyB,KAAK,CAAEhF,eAAaqB,KAAM,eACnDnC,EAAOG,QAAQoE,GAAG,QAAQ,kBAAMkL,EAAiBlN,GAAM,GAAM,UACxD,CACL,IAAMmO,EAAef,aAAagB,QAAQ,gBACpC9F,EAAW5C,KAAK8D,MAAM2E,GACxB7F,GACF7K,EAAOG,QAAQoE,GAAG,QAAQ,kBAAMkL,EAAiB5E,GAAU,SAG9D,IAGD,yBAAKrF,UAAU,iBACb,yBAAK7C,GAAI+L,IACT,kBAAC,EAAD,CACEtE,WAAY4B,EACZnD,KAAMc,EACNK,cAAeA,EACfG,UAAW,kBAAMgF,GAAoB,IACrCjF,UAAW,kBAAMiF,GAAoB,IACrClF,WAAYwF,MC1GpBmB,IAASC,OAAO,kBAAC,GAAD,MAASvL,SAASwL,eAAe,U","file":"static/js/main.1759c10e.chunk.js","sourcesContent":["import mapboxgl from \"mapbox-gl\";\nimport ReactDOMServer from \"react-dom/server\";\n\nimport { utils, classes } from \"./\";\n\nimport \"./index.css\";\n\nconst computeBounds = coordinates => {\n  const point = new mapboxgl.LngLat(coordinates[0][0], coordinates[0][1]);\n  const initBounds = new mapboxgl.LngLatBounds(point, point);\n  return coordinates.reduce(\n    (bounds, [lng, lat]) => bounds.extend(new mapboxgl.LngLat(lng, lat)),\n    initBounds\n  );\n};\n\nconst getNewLayerRemoveOldLayer = (mapRef, primitive) => {\n  let newLayerId = primitive;\n  if (\n    mapRef.current.getLayer(primitive) ||\n    mapRef.current.getLayer(`${primitive}1`)\n  ) {\n    newLayerId = mapRef.current.getLayer(primitive)\n      ? `${primitive}1`\n      : primitive;\n    const oldLayerId = mapRef.current.getLayer(primitive)\n      ? primitive\n      : `${primitive}1`;\n    mapRef.current.removeLayer(oldLayerId);\n    mapRef.current.removeSource(oldLayerId);\n  }\n  return newLayerId;\n};\n\nconst mouseEnterCallback = (e, mapRef, popupRef) => {\n  mapRef.current.getCanvas().style.cursor = \"pointer\";\n  let coordinates = e.features[0].geometry.coordinates.slice();\n  const description = e.features[0].properties.description;\n  while (Math.abs(e.lngLat.lng - coordinates[0]) > 180)\n    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n  popupRef.current\n    .setLngLat(coordinates)\n    .setHTML(description)\n    .addTo(mapRef.current);\n};\n\nconst mouseClickCallback = (\n  e,\n  mapRef,\n  popupRef,\n  deviceStatusMarker,\n  getStatusTable\n) => {\n  const { start, end } = deviceStatusMarker;\n  mapRef.current.getCanvas().style.cursor = \"pointer\";\n  const location =\n    start && start.location\n      ? start.location.coordinates\n      : end && end.location\n      ? end.location.coordinates\n      : [];\n  let coordinates = location.slice();\n  const description = ReactDOMServer.renderToString(\n    getStatusTable({\n      type: \"deviceStatusMarker\",\n      ...deviceStatusMarker\n    })\n  );\n  popupRef.current\n    .setLngLat(coordinates)\n    .setHTML(description)\n    .addTo(mapRef.current);\n};\n\nconst mouseLeaveCallback = (mapRef, popupRef) => {\n  mapRef.current.getCanvas().style.cursor = \"\";\n  popupRef.current.remove();\n};\n\nconst plotLine = (mapRef, popupRef, line, getStatusTable, options) => {\n  const { shed_animation } = options;\n  let newLayerId = getNewLayerRemoveOldLayer(mapRef, \"route\");\n  mapRef.current\n    .addLayer({\n      id: newLayerId,\n      type: \"line\",\n      source: {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: line\n        }\n      },\n      layout: {\n        \"line-join\": \"round\",\n        \"line-cap\": \"round\"\n      },\n      paint: {\n        \"line-color\": \"#6f4cff\",\n        \"line-width\": 8\n      }\n    })\n    .fitBounds(computeBounds(line.coordinates), {\n      linear: shed_animation,\n      padding: { top: 40, bottom: 40, left: 20, right: 20 }\n    });\n\n  newLayerId = getNewLayerRemoveOldLayer(mapRef, \"locationMarkers\");\n  mapRef.current.addLayer({\n    id: newLayerId,\n    type: \"symbol\",\n    source: {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: line.coordinates.map(([lng, lat, alt, recorded_at]) => ({\n          type: \"Feature\",\n          properties: {\n            description: ReactDOMServer.renderToString(\n              getStatusTable({\n                type: \"locationMarker\",\n                coordinates: [lat, lng],\n                alt,\n                recorded_at\n              })\n            ),\n            icon: \"marker\"\n          },\n          geometry: new classes.Point({\n            type: \"Point\",\n            coordinates: [lng, lat]\n          })\n        }))\n      }\n    },\n    layout: {\n      \"icon-image\": \"{icon}-15\",\n      \"icon-allow-overlap\": false\n    }\n  });\n\n  mapRef.current.on(\"mouseenter\", newLayerId, event =>\n    mouseEnterCallback(event, mapRef, popupRef)\n  );\n\n  mapRef.current.on(\"mouseleave\", newLayerId, () =>\n    mouseLeaveCallback(mapRef, popupRef)\n  );\n};\n\nconst useMarkers = (\n  mapRef,\n  popupRef,\n  markersRef,\n  deviceStatusMarkers,\n  getStatusTable\n) => {\n  if (markersRef.current && markersRef.current.length)\n    markersRef.current.forEach(marker => marker.remove());\n  let markerList = [];\n  const newLayerId = getNewLayerRemoveOldLayer(mapRef, \"deviceStatusMarkers\");\n  deviceStatusMarkers.forEach(deviceStatusMarker => {\n    const { start, end, deviceStatus, activity } = deviceStatusMarker;\n    if (start || end) {\n      const variant = utils.getIcon(activity || deviceStatus);\n      const markerElement = document.createElement(\"div\");\n      markerElement.className = \"marker-container\";\n\n      markerElement.innerHTML = `<img src=${utils.getImageSource(\n        variant\n      )} alt=${variant} class=\"marker-image\"/>`;\n\n      markerElement.addEventListener(\"mouseenter\", event =>\n        mouseClickCallback(\n          event,\n          mapRef,\n          popupRef,\n          deviceStatusMarker,\n          getStatusTable\n        )\n      );\n      markerElement.addEventListener(\"mouseleave\", () =>\n        mouseLeaveCallback(mapRef, popupRef)\n      );\n      const location =\n        start && start.location\n          ? start.location.coordinates\n          : end && end.location\n          ? end.location.coordinates\n          : [];\n      markerList.push(\n        new mapboxgl.Marker(markerElement)\n          .setLngLat(location)\n          .addTo(mapRef.current)\n      );\n    }\n  });\n\n  mapRef.current.on(\"mouseenter\", newLayerId, event =>\n    mouseEnterCallback(event, mapRef, popupRef)\n  );\n\n  mapRef.current.on(\"mouseleave\", newLayerId, () =>\n    mouseLeaveCallback(mapRef, popupRef)\n  );\n  markersRef.current = markerList;\n};\n\nexport default {\n  plotLine,\n  useMarkers\n};\n","class Line {\n  constructor({ type, coordinates }) {\n    this.type = type;\n    this.coordinates = coordinates;\n  }\n}\n\nclass Point {\n  constructor({ type, coordinates }) {\n    this.type = type;\n    this.coordinates = coordinates;\n  }\n}\n\nexport default {\n  Line,\n  Point\n};\n","import React from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n\nconst useMap = container => {\n  const mapRef = React.useRef();\n  React.useEffect(() => {\n    if (!mapRef || !mapRef.current)\n      mapRef.current = new mapboxgl.Map({\n        container,\n        style: \"mapbox://styles/mapbox/streets-v9\",\n        accessToken:\n          \"pk.eyJ1IjoiaHlwZXJ0cmFjay1kZXZvcHMiLCJhIjoiY2ptZzVndTduMWZ0YzNrbzFuNXR0cHUyOSJ9.Te8DokzaOXSVdh7ntUptyA\",\n        keyboard: true,\n        center: [0, 0]\n      });\n  }, [container]);\n  return mapRef;\n};\n\nconst usePopup = (mapRef, options = {}) => {\n  const popupRef = React.useRef(\n    new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false,\n      ...options\n    })\n  );\n  React.useEffect(() => {\n    mapRef.current.on(\"load\", () => {\n      popupRef.current.addTo(mapRef.current);\n    });\n  }, [mapRef, popupRef]);\n  return popupRef;\n};\n\nexport default {\n  useMap,\n  usePopup\n};\n","import { classes } from \"./\";\nconst trip_schema = require(\"../template/trip_schema.json\");\nconst LineString_schema = require(\"../template/LineString_schema.json\");\n\nconst Ajv = require(\"ajv\");\nconst ajv = new Ajv({ allErrors: true });\nconst trip_validator = ajv.compile(trip_schema);\nconst LineString_validator = ajv.compile(LineString_schema);\n\nconst parseGeofenceMarker = marker => {\n  const { arrival, geofence } = marker;\n  const arrivalPoint = new classes.Point(arrival.location.geometry);\n  const geofencePoint = new classes.Point(geofence.geometry);\n  const arrivalTime = arrival.location.recorded_at;\n  const geofenceId = geofence.geofence_id;\n  const geofenceMetadata = JSON.stringify(geofence.metadata, null, 2);\n  const radius = Number(geofence.radius);\n  return {\n    arrival: {\n      arrivalPoint,\n      arrivalTime\n    },\n    geofence: {\n      geofencePoint,\n      geofenceId,\n      geofenceMetadata,\n      radius\n    }\n  };\n};\n\nconst getStartEndData = ({ recorded_at, location }) => {\n  let acc = {};\n  if (recorded_at) acc.timestamp = recorded_at;\n  if (location && location.geometry)\n    acc.location = new classes.Point(location.geometry);\n  return acc;\n};\n\nconst parseDeviceStatusMarker = marker => {\n  const { activity, duration } = marker;\n  const deviceStatus = marker.value;\n  const end = getStartEndData(marker.end);\n  const start = getStartEndData(marker.start);\n  let extra = {};\n  if (activity) extra.activity = activity;\n  if (duration) extra.duration = duration;\n  return { start, end, deviceStatus, ...extra };\n};\n\nconst markerTypeMap = {\n  geofence: parseGeofenceMarker,\n  device_status: parseDeviceStatusMarker\n};\n\nconst parseMarker = ({ type, data }) =>\n  markerTypeMap[type] ? markerTypeMap[type](data) : data;\n\nconst valid_device_status_states = [\n  \"disconnected\",\n  \"inactive\",\n  \"unknown\",\n  \"stop\",\n  \"walk\",\n  \"run\",\n  \"drive\"\n];\n\nconst getImageSource = variant =>\n  `${process.env.PUBLIC_URL}/assets/${variant}.png`;\n\nconst getIcon = (deviceStatus, activity) =>\n  valid_device_status_states.includes(activity)\n    ? activity\n    : valid_device_status_states.includes(deviceStatus)\n    ? deviceStatus\n    : \"unknown\";\n\nconst markersByType = markers => type => {\n  const allMarkers = markers.reduce(\n    (markers, currentMarker) => ({\n      ...markers,\n      [currentMarker.type]: markers[currentMarker.type]\n        ? [parseMarker(currentMarker), ...markers[currentMarker.type]]\n        : [parseMarker(currentMarker)]\n    }),\n    {}\n  );\n  return type && allMarkers[type] ? allMarkers[type] : allMarkers;\n};\n\nconst secondsToHms = d => {\n  d = Number(d);\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  const hDisplay = h > 0 ? h + \" h \" : \"\";\n  const mDisplay = m > 0 ? m + \" m \" : \"\";\n  const sDisplay = s > 0 ? s + \" s\" : \"\";\n  return hDisplay + mDisplay + sDisplay;\n};\n\nconst validatorMap = {\n  trip: trip_validator,\n  LineString: LineString_validator\n};\n\nconst validateInputJSON = json => {\n  const validate = validatorMap[json.type || \"trip\"];\n  const valid = validate ? validate(json) : true;\n  return !valid ? validate.errors : false;\n};\n\nexport default {\n  parseMarker,\n  getIcon,\n  secondsToHms,\n  markersByType,\n  validateInputJSON,\n  valid_device_status_states,\n  getImageSource\n};\n","import React from \"react\";\nimport {\n  TextArea,\n  Dialog,\n  Button,\n  Classes,\n  Intent,\n  FileInput,\n  HTMLTable\n} from \"@blueprintjs/core\";\n\nimport { utils } from \"./../common\";\n\nimport \"./component.css\";\n\nconst TripInfoModal = ({\n  trip,\n  showTripModal,\n  updateJson,\n  hideModal,\n  showModal,\n  fetchError\n}) => {\n  const [userJson, updateUserJson] = React.useState(\n    JSON.stringify(trip, null, \"\\t\")\n  );\n  const [filename, updateFilename] = React.useState(undefined);\n  const [errors, updateErrors] = React.useState(undefined);\n\n  React.useEffect(() => {\n    if (JSON.stringify(trip) !== JSON.stringify(userJson))\n      updateUserJson(JSON.stringify(trip, null, \"\\t\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trip]);\n\n  React.useEffect(() => {\n    if (fetchError && fetchError !== errors) updateErrors({ fetchError });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchError]);\n\n  const validateInput = tripJSON => {\n    const validationErrors = utils.validateInputJSON(tripJSON);\n    if (validationErrors && validationErrors.length)\n      updateErrors(validationErrors);\n    else updateErrors(null);\n    return Boolean(validationErrors);\n  };\n\n  const handleUpdateJson = e => {\n    try {\n      const updatedJson = JSON.parse(userJson);\n      updateJson(updatedJson);\n      hideModal();\n    } catch (error) {\n      console.error(error);\n      updateErrors(error);\n    }\n  };\n\n  const handleCloseModal = e => {\n    updateUserJson(JSON.stringify(trip, null, \"\\t\"));\n    hideModal();\n  };\n\n  const handleFileUpload = event => {\n    event && event.preventDefault();\n    const fileReader = new FileReader();\n    const file = event.target.files[0];\n    updateFilename(file && file.name ? file.name : undefined);\n    fileReader.readAsText(file, \"UTF-8\");\n    fileReader.onload = onloadEvent => {\n      const derivedFileValue = onloadEvent.target.result;\n      const tripJSON = JSON.parse(derivedFileValue);\n      updateUserJson(derivedFileValue);\n      if (!validateInput(tripJSON)) {\n        updateJson(tripJSON);\n        hideModal();\n      }\n    };\n  };\n\n  const handleBlurEvent = event => {\n    event && event.preventDefault();\n    const value = event.target.value;\n    if (value)\n      try {\n        const tripJSON = JSON.parse(value);\n        validateInput(tripJSON);\n      } catch (error) {\n        console.error(error);\n        updateErrors(error);\n      }\n  };\n\n  return (\n    <>\n      <Button\n        intent={Intent.SUCCESS}\n        className={\"show-trip-button\"}\n        onClick={() => (showTripModal ? hideModal() : showModal())}\n      >\n        Update JSON\n      </Button>\n      <Dialog\n        isOpen={errors || showTripModal}\n        title=\"Add your own JSON\"\n        onClose={hideModal}\n        className=\"dialog\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <div className=\"dialog-container\">\n            <TextArea\n              value={userJson}\n              disabled={false}\n              onChange={e => updateUserJson(e.target.value)}\n              className={\"user-summary-input\"}\n              placeholder={\"Paste trip_summary here\"}\n              onBlur={handleBlurEvent}\n            />\n            {errors ? (\n              <div className={\"error-table-container\"}>\n                {Array.isArray(errors) ? (\n                  <HTMLTable className={\"error-table\"} bordered>\n                    <caption>\n                      There {errors.length > 1 ? \"are\" : \"is an\"}{\" \"}\n                      {errors.length > 1 ? errors.length : \"\"} issue\n                      {errors.length > 1 ? \"s\" : \"\"}\n                    </caption>\n                    <thead>\n                      <tr>\n                        <th>Location</th>\n                        <th>Issue</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {errors.map(error => (\n                        <tr key={error.dataPath}>\n                          <td>\n                            <div className=\"table-content\">\n                              {error.dataPath}\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"table-content\">{error.message}</div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </HTMLTable>\n                ) : (\n                  <div className=\"error-table error\">\n                    {errors.message ? errors.message : JSON.stringify(errors)}\n                  </div>\n                )}\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <FileInput\n              text={filename}\n              buttonText={\"Browse\"}\n              className=\"file-input\"\n              onInputChange={handleFileUpload}\n              inputProps={{ accept: \".json\" }}\n            />\n            <Button\n              disabled={(errors && errors.length) || !userJson}\n              onClick={handleCloseModal}\n            >\n              Close\n            </Button>\n            <Button\n              intent={Intent.PRIMARY}\n              disabled={(errors && errors.length) || !userJson}\n              onClick={handleUpdateJson}\n            >\n              Update\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default TripInfoModal;\n","import React from \"react\";\n\nimport { utils } from \"./../common\";\n\nimport \"./component.css\";\n\nconst months = [\n  \"jan\",\n  \"feb\",\n  \"mar\",\n  \"apr\",\n  \"may\",\n  \"jun\",\n  \"jul\",\n  \"aug\",\n  \"sep\",\n  \"oct\",\n  \"nov\",\n  \"dec\"\n];\n\nconst formatDate = timestamp =>\n  months[timestamp.getMonth()] +\n  \" \" +\n  timestamp.getDate() +\n  \", \" +\n  timestamp.getFullYear() +\n  \" \" +\n  timestamp.getHours() +\n  \":\" +\n  timestamp.getMinutes() +\n  \":\" +\n  timestamp.getSeconds();\n\nconst rowMap = {\n  deviceStatusMarker: ({ start, end, deviceStatus, activity, duration }) => (\n    <tbody>\n      {start ? (\n        <tr className=\"capitalize\">\n          <td>Start Time</td>\n          <td>{formatDate(new Date(start.timestamp))}</td>\n        </tr>\n      ) : null}\n      {end ? (\n        <tr className=\"capitalize\">\n          <td>End Time</td>\n          <td>{formatDate(new Date(end.timestamp))}</td>\n        </tr>\n      ) : null}\n      {duration ? (\n        <tr>\n          <td>Duration</td>\n          <td>{utils.secondsToHms(duration)}</td>\n        </tr>\n      ) : null}\n      {activity ? (\n        <tr>\n          <td>Activity</td>\n          <td className=\"capitalize\">{activity}</td>\n        </tr>\n      ) : null}\n    </tbody>\n  ),\n  locationMarker: ({ coordinates: [lat, lng], alt, recorded_at }) => (\n    <tbody>\n      <tr>\n        <td>Coordinates</td>\n        <td className=\"capitalize\">\n          {lat} {lng}\n        </td>\n      </tr>\n      {alt ? (\n        <tr>\n          <td>Altitude</td>\n          <td className=\"capitalize\">{alt}</td>\n        </tr>\n      ) : null}\n      {recorded_at ? (\n        <tr>\n          <td>Recorded at</td>\n          <td className=\"capitalize\">{formatDate(new Date(recorded_at))}</td>\n        </tr>\n      ) : null}\n    </tbody>\n  )\n};\n\nconst headerMap = {\n  locationMarker: () => \"location\",\n  deviceStatusMarker: ({ deviceStatus }) => deviceStatus\n};\n\nconst DeviceStatusTable = ({ type, ...props }) => (\n  <table className=\"device-status-table\">\n    <thead>\n      <tr>\n        <th colSpan={2} className=\"capitalize\">\n          {headerMap[type](props)}\n        </th>\n      </tr>\n    </thead>\n    {rowMap[type](props)}\n  </table>\n);\n\nexport default DeviceStatusTable;\n","import React from \"react\";\n\nimport TripInfoModal from \"./components/TripInfoModal\";\nimport DeviceStatusTable from \"./components/DeviceStatusTable\";\n\nimport { mapUtils, hooks, classes, utils } from \"./common\";\n\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"./App.css\";\n\nconst mapContainerId = \"map-container\";\n\nconst getStatusTable = props => <DeviceStatusTable {...props} />;\n\nconst params = new URLSearchParams(window.location.search);\n\nconst gistURL = params.get(\"gist\");\n\nconst locationArrays = params.get(\"locations\");\n\nconst shed_animation = params.get(\"shed_animation\") === \"true\";\n\nconst coordinates = JSON.parse(locationArrays);\n\nfunction App() {\n  const [showTripModal, updateShowTripModal] = React.useState(true);\n  const [json, updateJson] = React.useState(undefined);\n  const [error, updateError] = React.useState(undefined);\n  const mapRef = hooks.useMap(mapContainerId);\n  const locationPopupRef = hooks.usePopup(mapRef);\n  const deviceStatusPopupRef = hooks.usePopup(mapRef, { offset: 10 });\n  const markersRef = React.useRef([]);\n\n  const handleJsonUpdate = (json, fromLocalstorage, showModal) => {\n    updateJson(json);\n    if (!fromLocalstorage)\n      localStorage.setItem(\"previousJSON\", JSON.stringify(json, null, \"\\t\"));\n    if (json.type === \"LineString\") {\n      const line = new classes.Line(json);\n      mapUtils.plotLine(mapRef, locationPopupRef, line, getStatusTable, {\n        shed_animation\n      });\n      if (!showModal) updateShowTripModal(false);\n    } else {\n      try {\n        const { locations, markers } = json.summary;\n        const line = new classes.Line(locations);\n        const deviceStatusMarkers = utils.markersByType(markers)(\n          \"device_status\"\n        );\n        mapUtils.plotLine(mapRef, locationPopupRef, line, getStatusTable, {\n          shed_animation\n        });\n        mapUtils.useMarkers(\n          mapRef,\n          deviceStatusPopupRef,\n          markersRef,\n          deviceStatusMarkers,\n          getStatusTable\n        );\n      } catch (error) {\n        console.error(error);\n        updateError(error);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (gistURL) {\n      const gistId = gistURL.split(\"/\").pop();\n      fetch(`https://api.github.com/gists/${gistId}`)\n        .then(response => response.json())\n        .then(data => {\n          if (data.message) {\n            console.error(data.message);\n            updateError(data.message);\n          } else {\n            const json = JSON.parse(\n              data.files[\"default.json\"]\n                ? data.files[\"default.json\"].content\n                : Object.values(data.files)[0].content\n            );\n            updateJson(json);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n          updateError(error);\n        });\n    } else if (coordinates && coordinates.length) {\n      const line = new classes.Line({ coordinates, type: \"LineString\" });\n      mapRef.current.on(\"load\", () => handleJsonUpdate(line, true, false));\n    } else {\n      const previousJSON = localStorage.getItem(\"previousJSON\");\n      const tripJSON = JSON.parse(previousJSON);\n      if (tripJSON)\n        mapRef.current.on(\"load\", () => handleJsonUpdate(tripJSON, true));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <div id={mapContainerId} />\n      <TripInfoModal\n        fetchError={error}\n        trip={json}\n        showTripModal={showTripModal}\n        showModal={() => updateShowTripModal(true)}\n        hideModal={() => updateShowTripModal(false)}\n        updateJson={handleJsonUpdate}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}