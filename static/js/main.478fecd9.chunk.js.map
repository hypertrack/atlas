{"version":3,"sources":["common/map-utils.js","common/map-classes.js","common/map-hooks.js","common/utils.js","components/TripInfoModal.js","components/DeviceStatusTable.js","App.js","index.js"],"names":["getNewLayerRemoveOldLayer","mapRef","primitive","newLayerId","current","getLayer","oldLayerId","removeLayer","removeSource","mouseEnterCallback","e","popupRef","getCanvas","style","cursor","coordinates","features","geometry","slice","description","properties","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","mouseLeaveCallback","remove","plotLine","line","getStatusTable","addLayer","id","type","source","data","layout","paint","fitBounds","point","mapboxgl","LngLat","initBounds","LngLatBounds","reduce","bounds","lat","extend","computeBounds","padding","top","bottom","left","right","map","alt","recorded_at","ReactDOMServer","renderToString","icon","classes","Point","on","event","plotMarkers","deviceStatusMarkers","start","end","deviceStatus","activity","duration","location","utils","getIcon","Line","this","useMap","container","React","useRef","useEffect","Map","accessToken","keyboard","center","usePopup","options","Popup","closeButton","closeOnClick","trip_schema","require","LineString_schema","ajv","allErrors","trip_validator","compile","LineString_validator","getStartEndData","acc","timestamp","markerTypeMap","geofence","marker","arrival","arrivalPoint","geofencePoint","arrivalTime","geofenceId","geofence_id","geofenceMetadata","JSON","stringify","metadata","radius","Number","device_status","value","extra","parseMarker","iconMap","stop","walk","run","drive","cycle","disconnected","inactive","active","validatorMap","trip","LineString","defaultIcon","secondsToHms","d","h","floor","m","s","markersByType","markers","allMarkers","currentMarker","validateInputJSON","json","validate","errors","TripInfoModal","showTripModal","updateJson","hideModal","showModal","fetchError","useState","userJson","updateUserJson","undefined","filename","updateFilename","updateErrors","validateInput","tripJSON","validationErrors","length","Boolean","intent","Intent","SUCCESS","className","onClick","isOpen","title","onClose","Classes","DIALOG_BODY","disabled","onChange","target","placeholder","onBlur","preventDefault","parse","error","console","Array","isArray","bordered","key","dataPath","message","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","text","buttonText","onInputChange","fileReader","FileReader","file","files","name","readAsText","onload","onloadEvent","derivedFileValue","result","inputProps","accept","PRIMARY","updatedJson","months","formatDate","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","rowMap","deviceStatusMarker","Date","locationMarker","headerMap","DeviceStatusTable","props","colSpan","defaultJSON","mapContainerId","params","URLSearchParams","window","search","loadDefault","get","gistURL","App","updateShowTripModal","updateError","hooks","handleJsonUpdate","fromLocalstorage","localStorage","setItem","mapUtils","summary","locations","gistId","split","pop","fetch","then","response","content","Object","values","catch","history","replaceState","previousJSON","getItem","ReactDOM","render","document","getElementById"],"mappings":"m+uBAeMA,EAA4B,SAACC,EAAQC,GACzC,IAAIC,EAAaD,EACjB,GACED,EAAOG,QAAQC,SAASH,IACxBD,EAAOG,QAAQC,SAAf,UAA2BH,EAA3B,MACA,CACAC,EAAaF,EAAOG,QAAQC,SAASH,GAAxB,UACNA,EADM,KAETA,EACJ,IAAMI,EAAaL,EAAOG,QAAQC,SAASH,GACvCA,EADe,UAEZA,EAFY,KAGnBD,EAAOG,QAAQG,YAAYD,GAC3BL,EAAOG,QAAQI,aAAaF,GAE9B,OAAOH,GAGHM,EAAqB,SAACC,EAAGT,EAAQU,GACrCV,EAAOG,QAAQQ,YAAYC,MAAMC,OAAS,UAG1C,IAFA,IAAIC,EAAcL,EAAEM,SAAS,GAAGC,SAASF,YAAYG,QAC/CC,EAAcT,EAAEM,SAAS,GAAGI,WAAWD,YACtCE,KAAKC,IAAIZ,EAAEa,OAAOC,IAAMT,EAAY,IAAM,KAC/CA,EAAY,IAAML,EAAEa,OAAOC,IAAMT,EAAY,GAAK,KAAO,IAC3DJ,EAASP,QACNqB,UAAUV,GACVW,QAAQP,GACRQ,MAAM1B,EAAOG,UAGZwB,EAAqB,SAAC3B,EAAQU,GAClCV,EAAOG,QAAQQ,YAAYC,MAAMC,OAAS,GAC1CH,EAASP,QAAQyB,UAmKJ,GACbC,SAjKe,SAAC7B,EAAQU,EAAUoB,EAAMC,GACxC,IAAI7B,EAAaH,EAA0BC,EAAQ,SACnDA,EAAOG,QACJ6B,SAAS,CACRC,GAAI/B,EACJgC,KAAM,OACNC,OAAQ,CACND,KAAM,UACNE,KAAM,CACJF,KAAM,UACNf,WAAY,GACZH,SAAUc,IAGdO,OAAQ,CACN,YAAa,QACb,WAAY,SAEdC,MAAO,CACL,aAAc,UACd,aAAc,KAGjBC,UAnEiB,SAAAzB,GACpB,IAAM0B,EAAQ,IAAIC,IAASC,OAAO5B,EAAY,GAAG,GAAIA,EAAY,GAAG,IAC9D6B,EAAa,IAAIF,IAASG,aAAaJ,EAAOA,GACpD,OAAO1B,EAAY+B,QACjB,SAACC,EAAD,0BAAUvB,EAAV,KAAewB,EAAf,YAAwBD,EAAOE,OAAO,IAAIP,IAASC,OAAOnB,EAAKwB,MAC/DJ,GA8DWM,CAAcnB,EAAKhB,aAAc,CAC1CoC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,MAGrDpD,EAAaH,EAA0BC,EAAQ,mBAC/CA,EAAOG,QAAQ6B,SAAS,CACtBC,GAAI/B,EACJgC,KAAM,SACNC,OAAQ,CACND,KAAM,UACNE,KAAM,CACJF,KAAM,oBACNnB,SAAUe,EAAKhB,YAAYyC,KAAI,mCAAEhC,EAAF,KAAOwB,EAAP,KAAYS,EAAZ,KAAiBC,EAAjB,WAAmC,CAChEvB,KAAM,UACNf,WAAY,CACVD,YAAawC,IAAeC,eAC1B5B,EAAe,CACbG,KAAM,iBACNpB,YAAa,CAACiC,EAAKxB,GACnBiC,MACAC,iBAGJG,KAAM,UAER5C,SAAU,IAAI6C,EAAQC,MAAM,CAC1B5B,KAAM,QACNpB,YAAa,CAACS,EAAKwB,WAK3BV,OAAQ,CACN,aAAc,YACd,sBAAsB,KAI1BrC,EAAOG,QAAQ4D,GAAG,aAAc7D,GAAY,SAAA8D,GAAK,OAC/CxD,EAAmBwD,EAAOhE,EAAQU,MAGpCV,EAAOG,QAAQ4D,GAAG,aAAc7D,GAAY,kBAC1CyB,EAAmB3B,EAAQU,OAgG7BuD,YA5FkB,SAACjE,EAAQU,EAAUwD,EAAqBnC,GAC1D,IAAM7B,EAAaH,EAA0BC,EAAQ,uBACrDA,EAAOG,QAAQ6B,SAAS,CACtBC,GAAI/B,EACJgC,KAAM,SACNC,OAAQ,CACND,KAAM,UACNE,KAAM,CACJF,KAAM,oBACNnB,SAAUmD,EAAoBrB,QAC5B,SAAC9B,EAAD,OAAaoD,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,IAAKC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,SAAUC,EAAjD,EAAiDA,SAAjD,OACEJ,EAAMK,UAAYJ,EAAII,SAAtB,sBAESzD,GAFT,CAGM,CACEmB,KAAM,UACNf,WAAY,CACVD,YAAawC,IAAeC,eAC1B5B,EAAe,CACbG,KAAM,qBACNiC,QACAC,MACAC,kBAGJT,KAAMa,EAAMC,QACVL,EACAC,EACA,mBAGJtD,SAAUmD,EAAMK,UAElB,CACEtC,KAAM,UACNf,WAAY,CACVD,YAAawC,IAAeC,eAC1B5B,EAAe,CACbG,KAAM,qBACNiC,QACAC,MACAC,eACAC,WACAC,cAGJX,KAAMa,EAAMC,QAAQL,EAAcC,EAAU,WAE9CtD,SAAUoD,EAAII,YArCtB,sBAyCSzD,GAzCT,CA0CM,CACEmB,KAAM,UACNf,WAAY,CACVD,YAAawC,IAAeC,eAC1B5B,EAAe,CACbG,KAAM,qBACNiC,QACAC,MACAC,eACAC,WACAC,cAGJX,KAAMa,EAAMC,QAAQL,EAAcC,IAEpCtD,SAAUoD,EAAII,UAAYL,EAAMK,cAG1C,MAINnC,OAAQ,CACN,aAAc,YACd,sBAAsB,KAI1BrC,EAAOG,QAAQ4D,GAAG,aAAc7D,GAAY,SAAA8D,GAAK,OAC/CxD,EAAmBwD,EAAOhE,EAAQU,MAGpCV,EAAOG,QAAQ4D,GAAG,aAAc7D,GAAY,kBAC1CyB,EAAmB3B,EAAQU,Q,QChMhB,GACbiE,KAdA,cAAoC,IAAtBzC,EAAqB,EAArBA,KAAMpB,EAAe,EAAfA,YAAe,oBACjC8D,KAAK1C,KAAOA,EACZ0C,KAAK9D,YAAcA,GAarBgD,MARA,cAAoC,IAAtB5B,EAAqB,EAArBA,KAAMpB,EAAe,EAAfA,YAAe,oBACjC8D,KAAK1C,KAAOA,EACZ0C,KAAK9D,YAAcA,ICyBR,GACb+D,OAhCa,SAAAC,GACb,IAAM9E,EAAS+E,IAAMC,SAYrB,OAXAD,IAAME,WAAU,WACTjF,GAAWA,EAAOG,UACrBH,EAAOG,QAAU,IAAIsC,IAASyC,IAAI,CAChCJ,YACAlE,MAAO,oCACPuE,YACE,yGACFC,UAAU,EACVC,OAAQ,CAAC,EAAG,QAEf,CAACP,IACG9E,GAoBPsF,SAjBe,SAACtF,EAAQuF,GACxB,IAAM7E,EAAWqE,IAAMC,OACrB,IAAIvC,IAAS+C,MAAM,CACjBC,aAAa,EACbC,cAAc,KAQlB,OALAX,IAAME,WAAU,WACdjF,EAAOG,QAAQ4D,GAAG,QAAQ,WACxBrD,EAASP,QAAQuB,MAAM1B,EAAOG,cAE/B,CAACH,EAAQU,IACLA,I,ilBC/BT,IAAMiF,EAAcC,EAAQ,IACtBC,EAAoBD,EAAQ,IAG5BE,EAAM,IADAF,EAAQ,IACR,CAAQ,CAAEG,WAAW,IAC3BC,EAAiBF,EAAIG,QAAQN,GAC7BO,EAAuBJ,EAAIG,QAAQJ,GAwBnCM,EAAkB,SAAC,GAA+B,IAA7B1C,EAA4B,EAA5BA,YAAae,EAAe,EAAfA,SAClC4B,EAAM,GAIV,OAHI3C,IAAa2C,EAAIC,UAAY5C,GAC7Be,GAAYA,EAASxD,WACvBoF,EAAI5B,SAAW,IAAIX,EAAQC,MAAMU,EAASxD,WACrCoF,GAcHE,EAAgB,CACpBC,SA1C0B,SAAAC,GAAW,IAC7BC,EAAsBD,EAAtBC,QAASF,EAAaC,EAAbD,SACXG,EAAe,IAAI7C,EAAQC,MAAM2C,EAAQjC,SAASxD,UAClD2F,EAAgB,IAAI9C,EAAQC,MAAMyC,EAASvF,UAKjD,MAAO,CACLyF,QAAS,CACPC,eACAE,YAPgBH,EAAQjC,SAASf,aASnC8C,SAAU,CACRI,gBACAE,WAVeN,EAASO,YAWxBC,iBAVqBC,KAAKC,UAAUV,EAASW,SAAU,KAAM,GAW7DC,OAVWC,OAAOb,EAASY,WAoC/BE,cAb8B,SAAAb,GAAW,IACjClC,EAAuBkC,EAAvBlC,SAAUC,EAAaiC,EAAbjC,SACZF,EAAemC,EAAOc,MACtBlD,EAAM+B,EAAgBK,EAAOpC,KAC7BD,EAAQgC,EAAgBK,EAAOrC,OACjCoD,EAAQ,GAGZ,OAFIjD,IAAUiD,EAAMjD,SAAWA,GAC3BC,IAAUgD,EAAMhD,SAAWA,GACxB,EAAP,CAASJ,QAAOC,MAAKC,gBAAiBkD,KAQlCC,EAAc,SAAC,GAAD,IAAGtF,EAAH,EAAGA,KAAME,EAAT,EAASA,KAAT,OAAoBkE,EAAcpE,GAAME,IAEtDqF,EAAU,CACdC,KAAM,OACNC,KAAM,QACNC,IAAK,SACLC,MAAO,MACPC,MAAO,UACPC,aAAc,QACdC,SAAU,YACVC,OAAQ,UA+BJC,EAAe,CACnBC,KAAMnC,EACNoC,WAAYlC,GAUC,GACbsB,cACA9C,QA1Cc,SAACL,EAAcC,EAAU+D,GAAzB,OACdZ,EAAQnD,IAAa+D,GAAeZ,EAAQpD,IA0C5CiE,aA3BmB,SAAAC,GACnBA,EAAInB,OAAOmB,GACX,IAAMC,EAAIpH,KAAKqH,MAAMF,EAAI,MACnBG,EAAItH,KAAKqH,MAAOF,EAAI,KAAQ,IAC5BI,EAAIvH,KAAKqH,MAAOF,EAAI,KAAQ,IAKlC,OAHiBC,EAAI,EAAIA,EAAI,MAAQ,KACpBE,EAAI,EAAIA,EAAI,MAAQ,KACpBC,EAAI,EAAIA,EAAI,KAAO,KAoBpCC,cAzCoB,SAAAC,GAAO,OAAI,SAAA3G,GAC/B,IAAM4G,EAAaD,EAAQhG,QACzB,SAACgG,EAASE,GAAV,YACKF,EADL,eAEGE,EAAc7G,KAAO2G,EAAQE,EAAc7G,MAAtB,CACjBsF,EAAYuB,IADK,mBACcF,EAAQE,EAAc7G,QACtD,CAACsF,EAAYuB,QAEnB,IAEF,OAAO7G,GAAQ4G,EAAW5G,GAAQ4G,EAAW5G,GAAQ4G,IAgCrDE,kBAZwB,SAAAC,GACxB,IAAMC,EAAWhB,EAAae,EAAK/G,MAAQ,QAG3C,SADcgH,GAAWA,EAASD,KAClBC,EAASC,SCkFZC,G,MA5KO,SAAC,GAOhB,IANLjB,EAMI,EANJA,KACAkB,EAKI,EALJA,cACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WACI,EAC+B1E,IAAM2E,SACvC1C,KAAKC,UAAUkB,EAAM,KAAM,OAFzB,mBACGwB,EADH,KACaC,EADb,OAI+B7E,IAAM2E,cAASG,GAJ9C,mBAIGC,EAJH,KAIaC,EAJb,OAK2BhF,IAAM2E,cAASG,GAL1C,mBAKGV,EALH,KAKWa,EALX,KAOJjF,IAAME,WAAU,WACV+B,KAAKC,UAAUkB,KAAUnB,KAAKC,UAAU0C,IAC1CC,EAAe5C,KAAKC,UAAUkB,EAAM,KAAM,SAE3C,CAACA,IAEJpD,IAAME,WAAU,WACVwE,GAAcA,IAAeN,GAAQa,EAAa,CAAEP,iBAEvD,CAACA,IAEJ,IAAMQ,EAAgB,SAAAC,GACpB,IAAMC,EAAmB1F,EAAMuE,kBAAkBkB,GAIjD,OAHIC,GAAoBA,EAAiBC,OACvCJ,EAAaG,GACVH,EAAa,MACXK,QAAQF,IAiDjB,OACE,oCACE,kBAAC,IAAD,CACEG,OAAQC,IAAOC,QACfC,UAAW,mBACXC,QAAS,kBAAOrB,EAAgBE,IAAcC,MAHhD,eAOA,kBAAC,IAAD,CACEmB,OAAQxB,GAAUE,EAClBuB,MAAM,oBACNC,QAAStB,EACTkB,UAAU,UAEV,yBAAKA,UAAWK,IAAQC,aACtB,yBAAKN,UAAU,oBACb,kBAAC,IAAD,CACEnD,MAAOqC,EACPqB,UAAU,EACVC,SAAU,SAAAxK,GAAC,OAAImJ,EAAenJ,EAAEyK,OAAO5D,QACvCmD,UAAW,qBACXU,YAAa,0BACbC,OApCY,SAAApH,GACtBA,GAASA,EAAMqH,iBACf,IAAM/D,EAAQtD,EAAMkH,OAAO5D,MAC3B,GAAIA,EACF,IACE,IAAM4C,EAAWlD,KAAKsE,MAAMhE,GAC5B2C,EAAcC,GACd,MAAOqB,GACPC,QAAQD,MAAMA,GACdvB,EAAauB,OA6BRpC,EACC,yBAAKsB,UAAW,yBACbgB,MAAMC,QAAQvC,GACb,kBAAC,IAAD,CAAWsB,UAAW,cAAekB,UAAQ,GAC3C,0CACSxC,EAAOiB,OAAS,EAAI,MAAQ,QAAS,IAC3CjB,EAAOiB,OAAS,EAAIjB,EAAOiB,OAAS,GAFvC,SAGGjB,EAAOiB,OAAS,EAAI,IAAM,IAE7B,+BACE,4BACE,wCACA,uCAGJ,+BACGjB,EAAO5F,KAAI,SAAAgI,GAAK,OACf,wBAAIK,IAAKL,EAAMM,UACb,4BACE,yBAAKpB,UAAU,iBACZc,EAAMM,WAGX,4BACE,yBAAKpB,UAAU,iBAAiBc,EAAMO,gBAOhD,yBAAKrB,UAAU,qBACZtB,EAAO2C,QAAU3C,EAAO2C,QAAU9E,KAAKC,UAAUkC,KAItD,OAGR,yBAAKsB,UAAWK,IAAQiB,eACtB,yBAAKtB,UAAWK,IAAQkB,uBACtB,kBAAC,IAAD,CACEC,KAAMnC,EACNoC,WAAY,SACZzB,UAAU,aACV0B,cApGa,SAAAnI,GACvBA,GAASA,EAAMqH,iBACf,IAAMe,EAAa,IAAIC,WACjBC,EAAOtI,EAAMkH,OAAOqB,MAAM,GAChCxC,EAAeuC,GAAQA,EAAKE,KAAOF,EAAKE,UAAO3C,GAC/CuC,EAAWK,WAAWH,EAAM,SAC5BF,EAAWM,OAAS,SAAAC,GAClB,IAAMC,EAAmBD,EAAYzB,OAAO2B,OACtC3C,EAAWlD,KAAKsE,MAAMsB,GAC5BhD,EAAegD,GACV3C,EAAcC,KACjBZ,EAAWY,GACXX,OAyFMuD,WAAY,CAAEC,OAAQ,WAExB,kBAAC,IAAD,CACE/B,SAAW7B,GAAUA,EAAOiB,SAAYT,EACxCe,QA9Ga,SAAAjK,GACvBmJ,EAAe5C,KAAKC,UAAUkB,EAAM,KAAM,OAC1CoB,MA0GQ,SAMA,kBAAC,IAAD,CACEe,OAAQC,IAAOyC,QACfhC,SAAW7B,GAAUA,EAAOiB,SAAYT,EACxCe,QAhIa,SAAAjK,GACvB,IACE,IAAMwM,EAAcjG,KAAKsE,MAAM3B,GAC/BL,EAAW2D,GACX1D,IACA,MAAOgC,GACPC,QAAQD,MAAMA,GACdvB,EAAauB,MAsHP,gB,QCvKN2B,EAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIC,EAAa,SAAA9G,GAAS,OAC1B6G,EAAO7G,EAAU+G,YACjB,IACA/G,EAAUgH,UACV,KACAhH,EAAUiH,cACV,IACAjH,EAAUkH,WACV,IACAlH,EAAUmH,aACV,IACAnH,EAAUoH,cAENC,EAAS,CACbC,mBAAoB,gBAAGxJ,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAmBE,GAA7B,EAAeD,aAAf,EAA6BC,UAAUC,EAAvC,EAAuCA,SAAvC,OAClB,+BACGJ,EACC,wBAAIsG,UAAU,cACZ,0CACA,4BAAK0C,EAAW,IAAIS,KAAKzJ,EAAMkC,cAE/B,KACHjC,EACC,wBAAIqG,UAAU,cACZ,wCACA,4BAAK0C,EAAW,IAAIS,KAAKxJ,EAAIiC,cAE7B,KACH9B,EACC,4BACE,wCACA,4BAAKE,EAAM6D,aAAa/D,KAExB,KACHD,EACC,4BACE,wCACA,wBAAImG,UAAU,cAAcnG,IAE5B,OAGRuJ,eAAgB,gCAAG/M,YAAH,GAAiBiC,EAAjB,KAAsBxB,EAAtB,KAA4BiC,EAA5B,EAA4BA,IAAKC,EAAjC,EAAiCA,YAAjC,OACd,+BACE,4BACE,2CACA,wBAAIgH,UAAU,cACX1H,EADH,IACSxB,IAGViC,EACC,4BACE,wCACA,wBAAIiH,UAAU,cAAcjH,IAE5B,KACHC,EACC,4BACE,2CACA,wBAAIgH,UAAU,cAAc0C,EAAW,IAAIS,KAAKnK,MAEhD,QAKJqK,EAAY,CAChBD,eAAgB,iBAAM,YACtBF,mBAAoB,qBAAGtJ,eAgBV0J,EAbW,SAAC,GAAD,IAAG7L,EAAH,EAAGA,KAAS8L,EAAZ,+BACxB,2BAAOvD,UAAU,uBACf,+BACE,4BACE,wBAAIwD,QAAS,EAAGxD,UAAU,cACvBqD,EAAU5L,GAAM8L,MAItBN,EAAOxL,GAAM8L,KC1FZE,G,qBAActI,EAAQ,MAEtBuI,EAAiB,gBAEjBpM,EAAiB,SAAAiM,GAAK,OAAI,kBAAC,EAAsBA,IAEjDI,EAAS,IAAIC,gBAAgBC,OAAO9J,SAAS+J,QAE7CC,EAA4C,SAA9BJ,EAAOK,IAAI,eAEzBC,EAAUN,EAAOK,IAAI,QAmFZE,OAjFf,WAAgB,IAAD,EACgC5J,IAAM2E,UAAS,GAD/C,mBACNL,EADM,KACSuF,EADT,OAEc7J,IAAM2E,SAC/B8E,EAAcN,OAAcrE,GAHjB,mBAENZ,EAFM,KAEAK,EAFA,OAKgBvE,IAAM2E,cAASG,GAL/B,mBAKN0B,EALM,KAKCsD,EALD,KAMP7O,EAAS8O,EAAMjK,OAAOsJ,GACtBzN,EAAWoO,EAAMxJ,SAAStF,GAE1B+O,EAAmB,SAAC9F,EAAM+F,GAI9B,GAHA1F,EAAWL,GACN+F,GACHC,aAAaC,QAAQ,eAAgBlI,KAAKC,UAAUgC,EAAM,KAAM,OAChD,eAAdA,EAAK/G,KAAuB,CAC9B,IAAMJ,EAAO,IAAI+B,EAAQc,KAAKsE,GAC9BkG,EAAStN,SAAS7B,EAAQU,EAAUoB,EAAMC,QAE1C,IAAK,IAAD,EAC6BkH,EAAKmG,QAA5BC,EADN,EACMA,UAAWxG,EADjB,EACiBA,QACb/G,EAAO,IAAI+B,EAAQc,KAAK0K,GACxBnL,EAAsBO,EAAMmE,cAAcC,EAApBpE,CAC1B,iBAEF0K,EAAStN,SAAS7B,EAAQU,EAAUoB,EAAMC,GAC1CoN,EAASlL,YACPjE,EACAU,EACAwD,EACAnC,GAEF,MAAOwJ,GACPsD,EAAYtD,KAmClB,OA9BAxG,IAAME,WAAU,WACd,GAAIyJ,EAAS,CACX,IAAMY,EAASZ,EAAQa,MAAM,KAAKC,MAClCC,MAAM,gCAAD,OAAiCH,IACnCI,MAAK,SAAAC,GAAQ,OAAIA,EAAS1G,UAC1ByG,MAAK,SAAAtN,GACJ,GAAIA,EAAK0J,QAAS+C,EAAYzM,EAAK0J,aAC9B,CACH,IAAM7C,EAAOjC,KAAKsE,MAChBlJ,EAAKmK,MAAM,gBACPnK,EAAKmK,MAAM,gBAAgBqD,QAC3BC,OAAOC,OAAO1N,EAAKmK,OAAO,GAAGqD,SAEnCtG,EAAWL,OAGd8G,OAAM,SAAAxE,GAAK,OAAIsD,EAAYtD,WACzB,GAAIiD,EACTF,OAAO0B,QAAQC,aAAa,GAAI,GAAI,0BACjC,CACH,IAAMC,EAAejB,aAAakB,QAAQ,gBACpCjG,EAAWlD,KAAKsE,MAAM4E,GACxBhG,GACFlK,EAAOG,QAAQ4D,GAAG,QAAQ,WACxBgL,EAAiB7E,GAAU,SAIhC,IAGD,yBAAKO,UAAU,iBACb,yBAAKxI,GAAIkM,IACT,kBAAC,EAAD,CACE1E,WAAY8B,EACZpD,KAAMc,EACNI,cAAeA,EACfG,UAAW,kBAAMoF,GAAoB,IACrCrF,UAAW,kBAAMqF,GAAoB,IACrCtF,WAAYyF,MC7FpBqB,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.478fecd9.chunk.js","sourcesContent":["import mapboxgl from \"mapbox-gl\";\n\nimport { utils, classes } from \"./\";\n\nimport ReactDOMServer from \"react-dom/server\";\n\nconst computeBounds = coordinates => {\n  const point = new mapboxgl.LngLat(coordinates[0][0], coordinates[0][1]);\n  const initBounds = new mapboxgl.LngLatBounds(point, point);\n  return coordinates.reduce(\n    (bounds, [lng, lat]) => bounds.extend(new mapboxgl.LngLat(lng, lat)),\n    initBounds\n  );\n};\n\nconst getNewLayerRemoveOldLayer = (mapRef, primitive) => {\n  let newLayerId = primitive;\n  if (\n    mapRef.current.getLayer(primitive) ||\n    mapRef.current.getLayer(`${primitive}1`)\n  ) {\n    newLayerId = mapRef.current.getLayer(primitive)\n      ? `${primitive}1`\n      : primitive;\n    const oldLayerId = mapRef.current.getLayer(primitive)\n      ? primitive\n      : `${primitive}1`;\n    mapRef.current.removeLayer(oldLayerId);\n    mapRef.current.removeSource(oldLayerId);\n  }\n  return newLayerId;\n};\n\nconst mouseEnterCallback = (e, mapRef, popupRef) => {\n  mapRef.current.getCanvas().style.cursor = \"pointer\";\n  let coordinates = e.features[0].geometry.coordinates.slice();\n  const description = e.features[0].properties.description;\n  while (Math.abs(e.lngLat.lng - coordinates[0]) > 180)\n    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n  popupRef.current\n    .setLngLat(coordinates)\n    .setHTML(description)\n    .addTo(mapRef.current);\n};\n\nconst mouseLeaveCallback = (mapRef, popupRef) => {\n  mapRef.current.getCanvas().style.cursor = \"\";\n  popupRef.current.remove();\n};\n\nconst plotLine = (mapRef, popupRef, line, getStatusTable) => {\n  let newLayerId = getNewLayerRemoveOldLayer(mapRef, \"route\");\n  mapRef.current\n    .addLayer({\n      id: newLayerId,\n      type: \"line\",\n      source: {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: line\n        }\n      },\n      layout: {\n        \"line-join\": \"round\",\n        \"line-cap\": \"round\"\n      },\n      paint: {\n        \"line-color\": \"#6f4cff\",\n        \"line-width\": 8\n      }\n    })\n    .fitBounds(computeBounds(line.coordinates), {\n      padding: { top: 40, bottom: 40, left: 20, right: 20 }\n    });\n\n  newLayerId = getNewLayerRemoveOldLayer(mapRef, \"locationMarkers\");\n  mapRef.current.addLayer({\n    id: newLayerId,\n    type: \"symbol\",\n    source: {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: line.coordinates.map(([lng, lat, alt, recorded_at]) => ({\n          type: \"Feature\",\n          properties: {\n            description: ReactDOMServer.renderToString(\n              getStatusTable({\n                type: \"locationMarker\",\n                coordinates: [lat, lng],\n                alt,\n                recorded_at\n              })\n            ),\n            icon: \"marker\"\n          },\n          geometry: new classes.Point({\n            type: \"Point\",\n            coordinates: [lng, lat]\n          })\n        }))\n      }\n    },\n    layout: {\n      \"icon-image\": \"{icon}-15\",\n      \"icon-allow-overlap\": false\n    }\n  });\n\n  mapRef.current.on(\"mouseenter\", newLayerId, event =>\n    mouseEnterCallback(event, mapRef, popupRef)\n  );\n\n  mapRef.current.on(\"mouseleave\", newLayerId, () =>\n    mouseLeaveCallback(mapRef, popupRef)\n  );\n};\n\nconst plotMarkers = (mapRef, popupRef, deviceStatusMarkers, getStatusTable) => {\n  const newLayerId = getNewLayerRemoveOldLayer(mapRef, \"deviceStatusMarkers\");\n  mapRef.current.addLayer({\n    id: newLayerId,\n    type: \"symbol\",\n    source: {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: deviceStatusMarkers.reduce(\n          (features, { start, end, deviceStatus, activity, duration }) =>\n            start.location && end.location\n              ? [\n                  ...features,\n                  {\n                    type: \"Feature\",\n                    properties: {\n                      description: ReactDOMServer.renderToString(\n                        getStatusTable({\n                          type: \"deviceStatusMarker\",\n                          start,\n                          end,\n                          deviceStatus\n                        })\n                      ),\n                      icon: utils.getIcon(\n                        deviceStatus,\n                        activity,\n                        \"circle-stroked\"\n                      )\n                    },\n                    geometry: start.location\n                  },\n                  {\n                    type: \"Feature\",\n                    properties: {\n                      description: ReactDOMServer.renderToString(\n                        getStatusTable({\n                          type: \"deviceStatusMarker\",\n                          start,\n                          end,\n                          deviceStatus,\n                          activity,\n                          duration\n                        })\n                      ),\n                      icon: utils.getIcon(deviceStatus, activity, \"circle\")\n                    },\n                    geometry: end.location\n                  }\n                ]\n              : [\n                  ...features,\n                  {\n                    type: \"Feature\",\n                    properties: {\n                      description: ReactDOMServer.renderToString(\n                        getStatusTable({\n                          type: \"deviceStatusMarker\",\n                          start,\n                          end,\n                          deviceStatus,\n                          activity,\n                          duration\n                        })\n                      ),\n                      icon: utils.getIcon(deviceStatus, activity)\n                    },\n                    geometry: end.location || start.location\n                  }\n                ],\n          []\n        )\n      }\n    },\n    layout: {\n      \"icon-image\": \"{icon}-15\",\n      \"icon-allow-overlap\": true\n    }\n  });\n\n  mapRef.current.on(\"mouseenter\", newLayerId, event =>\n    mouseEnterCallback(event, mapRef, popupRef)\n  );\n\n  mapRef.current.on(\"mouseleave\", newLayerId, () =>\n    mouseLeaveCallback(mapRef, popupRef)\n  );\n};\n\nexport default {\n  plotLine,\n  plotMarkers\n};\n","class Line {\n  constructor({ type, coordinates }) {\n    this.type = type;\n    this.coordinates = coordinates;\n  }\n}\n\nclass Point {\n  constructor({ type, coordinates }) {\n    this.type = type;\n    this.coordinates = coordinates;\n  }\n}\n\nexport default {\n  Line,\n  Point\n};\n","import React from \"react\";\n\nimport mapboxgl from \"mapbox-gl\";\n\nconst useMap = container => {\n  const mapRef = React.useRef();\n  React.useEffect(() => {\n    if (!mapRef || !mapRef.current)\n      mapRef.current = new mapboxgl.Map({\n        container,\n        style: \"mapbox://styles/mapbox/streets-v9\",\n        accessToken:\n          \"pk.eyJ1IjoiaHlwZXJ0cmFjay1kZXZvcHMiLCJhIjoiY2ptZzVndTduMWZ0YzNrbzFuNXR0cHUyOSJ9.Te8DokzaOXSVdh7ntUptyA\",\n        keyboard: true,\n        center: [0, 0]\n      });\n  }, [container]);\n  return mapRef;\n};\n\nconst usePopup = (mapRef, options) => {\n  const popupRef = React.useRef(\n    new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    })\n  );\n  React.useEffect(() => {\n    mapRef.current.on(\"load\", () => {\n      popupRef.current.addTo(mapRef.current);\n    });\n  }, [mapRef, popupRef]);\n  return popupRef;\n};\n\nexport default {\n  useMap,\n  usePopup\n};\n","import { classes } from \"./\";\nconst trip_schema = require(\"../template/trip_schema.json\");\nconst LineString_schema = require(\"../template/LineString_schema.json\");\n\nconst Ajv = require(\"ajv\");\nconst ajv = new Ajv({ allErrors: true });\nconst trip_validator = ajv.compile(trip_schema);\nconst LineString_validator = ajv.compile(LineString_schema);\n\nconst parseGeofenceMarker = marker => {\n  const { arrival, geofence } = marker;\n  const arrivalPoint = new classes.Point(arrival.location.geometry);\n  const geofencePoint = new classes.Point(geofence.geometry);\n  const arrivalTime = arrival.location.recorded_at;\n  const geofenceId = geofence.geofence_id;\n  const geofenceMetadata = JSON.stringify(geofence.metadata, null, 2);\n  const radius = Number(geofence.radius);\n  return {\n    arrival: {\n      arrivalPoint,\n      arrivalTime\n    },\n    geofence: {\n      geofencePoint,\n      geofenceId,\n      geofenceMetadata,\n      radius\n    }\n  };\n};\n\nconst getStartEndData = ({ recorded_at, location }) => {\n  let acc = {};\n  if (recorded_at) acc.timestamp = recorded_at;\n  if (location && location.geometry)\n    acc.location = new classes.Point(location.geometry);\n  return acc;\n};\n\nconst parseDeviceStatusMarker = marker => {\n  const { activity, duration } = marker;\n  const deviceStatus = marker.value;\n  const end = getStartEndData(marker.end);\n  const start = getStartEndData(marker.start);\n  let extra = {};\n  if (activity) extra.activity = activity;\n  if (duration) extra.duration = duration;\n  return { start, end, deviceStatus, ...extra };\n};\n\nconst markerTypeMap = {\n  geofence: parseGeofenceMarker,\n  device_status: parseDeviceStatusMarker\n};\n\nconst parseMarker = ({ type, data }) => markerTypeMap[type](data);\n\nconst iconMap = {\n  stop: \"cafe\",\n  walk: \"pitch\",\n  run: \"skiing\",\n  drive: \"car\",\n  cycle: \"bicycle\",\n  disconnected: \"cross\",\n  inactive: \"roadblock\",\n  active: \"rocket\"\n};\n\nconst getIcon = (deviceStatus, activity, defaultIcon) =>\n  iconMap[activity] || defaultIcon || iconMap[deviceStatus];\n\nconst markersByType = markers => type => {\n  const allMarkers = markers.reduce(\n    (markers, currentMarker) => ({\n      ...markers,\n      [currentMarker.type]: markers[currentMarker.type]\n        ? [parseMarker(currentMarker), ...markers[currentMarker.type]]\n        : [parseMarker(currentMarker)]\n    }),\n    {}\n  );\n  return type && allMarkers[type] ? allMarkers[type] : allMarkers;\n};\n\nconst secondsToHms = d => {\n  d = Number(d);\n  const h = Math.floor(d / 3600);\n  const m = Math.floor((d % 3600) / 60);\n  const s = Math.floor((d % 3600) % 60);\n\n  const hDisplay = h > 0 ? h + \" h \" : \"\";\n  const mDisplay = m > 0 ? m + \" m \" : \"\";\n  const sDisplay = s > 0 ? s + \" s\" : \"\";\n  return hDisplay + mDisplay + sDisplay;\n};\n\nconst validatorMap = {\n  trip: trip_validator,\n  LineString: LineString_validator\n};\n\nconst validateInputJSON = json => {\n  const validate = validatorMap[json.type || \"trip\"];\n  debugger;\n  const valid = validate ? validate(json) : true;\n  return !valid ? validate.errors : false;\n};\n\nexport default {\n  parseMarker,\n  getIcon,\n  secondsToHms,\n  markersByType,\n  validateInputJSON\n};\n","import React from \"react\";\nimport {\n  TextArea,\n  Dialog,\n  Button,\n  Classes,\n  Intent,\n  FileInput,\n  HTMLTable\n} from \"@blueprintjs/core\";\n\nimport { utils } from \"./../common\";\n\nimport \"./component.css\";\n\nconst TripInfoModal = ({\n  trip,\n  showTripModal,\n  updateJson,\n  hideModal,\n  showModal,\n  fetchError\n}) => {\n  const [userJson, updateUserJson] = React.useState(\n    JSON.stringify(trip, null, \"\\t\")\n  );\n  const [filename, updateFilename] = React.useState(undefined);\n  const [errors, updateErrors] = React.useState(undefined);\n\n  React.useEffect(() => {\n    if (JSON.stringify(trip) !== JSON.stringify(userJson))\n      updateUserJson(JSON.stringify(trip, null, \"\\t\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trip]);\n\n  React.useEffect(() => {\n    if (fetchError && fetchError !== errors) updateErrors({ fetchError });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchError]);\n\n  const validateInput = tripJSON => {\n    const validationErrors = utils.validateInputJSON(tripJSON);\n    if (validationErrors && validationErrors.length)\n      updateErrors(validationErrors);\n    else updateErrors(null);\n    return Boolean(validationErrors);\n  };\n\n  const handleUpdateJson = e => {\n    try {\n      const updatedJson = JSON.parse(userJson);\n      updateJson(updatedJson);\n      hideModal();\n    } catch (error) {\n      console.error(error);\n      updateErrors(error);\n    }\n  };\n\n  const handleCloseModal = e => {\n    updateUserJson(JSON.stringify(trip, null, \"\\t\"));\n    hideModal();\n  };\n\n  const handleFileUpload = event => {\n    event && event.preventDefault();\n    const fileReader = new FileReader();\n    const file = event.target.files[0];\n    updateFilename(file && file.name ? file.name : undefined);\n    fileReader.readAsText(file, \"UTF-8\");\n    fileReader.onload = onloadEvent => {\n      const derivedFileValue = onloadEvent.target.result;\n      const tripJSON = JSON.parse(derivedFileValue);\n      updateUserJson(derivedFileValue);\n      if (!validateInput(tripJSON)) {\n        updateJson(tripJSON);\n        hideModal();\n      }\n    };\n  };\n\n  const handleBlurEvent = event => {\n    event && event.preventDefault();\n    const value = event.target.value;\n    if (value)\n      try {\n        const tripJSON = JSON.parse(value);\n        validateInput(tripJSON);\n      } catch (error) {\n        console.error(error);\n        updateErrors(error);\n      }\n  };\n\n  return (\n    <>\n      <Button\n        intent={Intent.SUCCESS}\n        className={\"show-trip-button\"}\n        onClick={() => (showTripModal ? hideModal() : showModal())}\n      >\n        Update JSON\n      </Button>\n      <Dialog\n        isOpen={errors || showTripModal}\n        title=\"Add your own JSON\"\n        onClose={hideModal}\n        className=\"dialog\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <div className=\"dialog-container\">\n            <TextArea\n              value={userJson}\n              disabled={false}\n              onChange={e => updateUserJson(e.target.value)}\n              className={\"user-summary-input\"}\n              placeholder={\"Paste trip_summary here\"}\n              onBlur={handleBlurEvent}\n            />\n            {errors ? (\n              <div className={\"error-table-container\"}>\n                {Array.isArray(errors) ? (\n                  <HTMLTable className={\"error-table\"} bordered>\n                    <caption>\n                      There {errors.length > 1 ? \"are\" : \"is an\"}{\" \"}\n                      {errors.length > 1 ? errors.length : \"\"} issue\n                      {errors.length > 1 ? \"s\" : \"\"}\n                    </caption>\n                    <thead>\n                      <tr>\n                        <th>Location</th>\n                        <th>Issue</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {errors.map(error => (\n                        <tr key={error.dataPath}>\n                          <td>\n                            <div className=\"table-content\">\n                              {error.dataPath}\n                            </div>\n                          </td>\n                          <td>\n                            <div className=\"table-content\">{error.message}</div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </HTMLTable>\n                ) : (\n                  <div className=\"error-table error\">\n                    {errors.message ? errors.message : JSON.stringify(errors)}\n                  </div>\n                )}\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <FileInput\n              text={filename}\n              buttonText={\"Browse\"}\n              className=\"file-input\"\n              onInputChange={handleFileUpload}\n              inputProps={{ accept: \".json\" }}\n            />\n            <Button\n              disabled={(errors && errors.length) || !userJson}\n              onClick={handleCloseModal}\n            >\n              Close\n            </Button>\n            <Button\n              intent={Intent.PRIMARY}\n              disabled={(errors && errors.length) || !userJson}\n              onClick={handleUpdateJson}\n            >\n              Update\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  );\n};\n\nexport default TripInfoModal;\n","import React from \"react\";\n\nimport { utils } from \"./../common\";\n\nimport \"./component.css\";\n\nconst months = [\n  \"jan\",\n  \"feb\",\n  \"mar\",\n  \"apr\",\n  \"may\",\n  \"jun\",\n  \"jul\",\n  \"aug\",\n  \"sep\",\n  \"oct\",\n  \"nov\",\n  \"dec\"\n];\n\nconst formatDate = timestamp =>\n  months[timestamp.getMonth()] +\n  \" \" +\n  timestamp.getDate() +\n  \", \" +\n  timestamp.getFullYear() +\n  \" \" +\n  timestamp.getHours() +\n  \":\" +\n  timestamp.getMinutes() +\n  \":\" +\n  timestamp.getSeconds();\n\nconst rowMap = {\n  deviceStatusMarker: ({ start, end, deviceStatus, activity, duration }) => (\n    <tbody>\n      {start ? (\n        <tr className=\"capitalize\">\n          <td>Start Time</td>\n          <td>{formatDate(new Date(start.timestamp))}</td>\n        </tr>\n      ) : null}\n      {end ? (\n        <tr className=\"capitalize\">\n          <td>End Time</td>\n          <td>{formatDate(new Date(end.timestamp))}</td>\n        </tr>\n      ) : null}\n      {duration ? (\n        <tr>\n          <td>Duration</td>\n          <td>{utils.secondsToHms(duration)}</td>\n        </tr>\n      ) : null}\n      {activity ? (\n        <tr>\n          <td>Activity</td>\n          <td className=\"capitalize\">{activity}</td>\n        </tr>\n      ) : null}\n    </tbody>\n  ),\n  locationMarker: ({ coordinates: [lat, lng], alt, recorded_at }) => (\n    <tbody>\n      <tr>\n        <td>Coordinates</td>\n        <td className=\"capitalize\">\n          {lat} {lng}\n        </td>\n      </tr>\n      {alt ? (\n        <tr>\n          <td>Altitude</td>\n          <td className=\"capitalize\">{alt}</td>\n        </tr>\n      ) : null}\n      {recorded_at ? (\n        <tr>\n          <td>Recorded at</td>\n          <td className=\"capitalize\">{formatDate(new Date(recorded_at))}</td>\n        </tr>\n      ) : null}\n    </tbody>\n  )\n};\n\nconst headerMap = {\n  locationMarker: () => \"location\",\n  deviceStatusMarker: ({ deviceStatus }) => deviceStatus\n};\n\nconst DeviceStatusTable = ({ type, ...props }) => (\n  <table className=\"device-status-table\">\n    <thead>\n      <tr>\n        <th colSpan={2} className=\"capitalize\">\n          {headerMap[type](props)}\n        </th>\n      </tr>\n    </thead>\n    {rowMap[type](props)}\n  </table>\n);\n\nexport default DeviceStatusTable;\n","import React from \"react\";\n\nimport TripInfoModal from \"./components/TripInfoModal\";\nimport DeviceStatusTable from \"./components/DeviceStatusTable\";\n\nimport { mapUtils, hooks, classes, utils } from \"./common\";\n\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"./App.css\";\n\nconst defaultJSON = require(\"./template/default.json\");\n\nconst mapContainerId = \"map-container\";\n\nconst getStatusTable = props => <DeviceStatusTable {...props} />;\n\nconst params = new URLSearchParams(window.location.search);\n\nconst loadDefault = params.get(\"loadDefault\") === \"true\";\n\nconst gistURL = params.get(\"gist\");\n\nfunction App() {\n  const [showTripModal, updateShowTripModal] = React.useState(true);\n  const [json, updateJson] = React.useState(\n    loadDefault ? defaultJSON : undefined\n  );\n  const [error, updateError] = React.useState(undefined);\n  const mapRef = hooks.useMap(mapContainerId);\n  const popupRef = hooks.usePopup(mapRef);\n\n  const handleJsonUpdate = (json, fromLocalstorage) => {\n    updateJson(json);\n    if (!fromLocalstorage)\n      localStorage.setItem(\"previousJSON\", JSON.stringify(json, null, \"\\t\"));\n    if (json.type === \"LineString\") {\n      const line = new classes.Line(json);\n      mapUtils.plotLine(mapRef, popupRef, line, getStatusTable);\n    } else {\n      try {\n        const { locations, markers } = json.summary;\n        const line = new classes.Line(locations);\n        const deviceStatusMarkers = utils.markersByType(markers)(\n          \"device_status\"\n        );\n        mapUtils.plotLine(mapRef, popupRef, line, getStatusTable);\n        mapUtils.plotMarkers(\n          mapRef,\n          popupRef,\n          deviceStatusMarkers,\n          getStatusTable\n        );\n      } catch (error) {\n        updateError(error);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (gistURL) {\n      const gistId = gistURL.split(\"/\").pop();\n      fetch(`https://api.github.com/gists/${gistId}`)\n        .then(response => response.json())\n        .then(data => {\n          if (data.message) updateError(data.message);\n          else {\n            const json = JSON.parse(\n              data.files[\"default.json\"]\n                ? data.files[\"default.json\"].content\n                : Object.values(data.files)[0].content\n            );\n            updateJson(json);\n          }\n        })\n        .catch(error => updateError(error));\n    } else if (loadDefault)\n      window.history.replaceState({}, \"\", \"?loadDefault=false\");\n    else {\n      const previousJSON = localStorage.getItem(\"previousJSON\");\n      const tripJSON = JSON.parse(previousJSON);\n      if (tripJSON)\n        mapRef.current.on(\"load\", () => {\n          handleJsonUpdate(tripJSON, true);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <div id={mapContainerId} />\n      <TripInfoModal\n        fetchError={error}\n        trip={json}\n        showTripModal={showTripModal}\n        showModal={() => updateShowTripModal(true)}\n        hideModal={() => updateShowTripModal(false)}\n        updateJson={handleJsonUpdate}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}